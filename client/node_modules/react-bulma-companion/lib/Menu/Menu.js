"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Menu;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _MenuLabel = _interopRequireDefault(require("./MenuLabel"));

var _MenuList = _interopRequireDefault(require("./MenuList"));

var _MenuListItem = _interopRequireDefault(require("./MenuListItem"));

var _MenuLink = _interopRequireDefault(require("./MenuLink"));

var _Element = _interopRequireDefault(require("../Element"));

var _excluded = ["children", "className", "size"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var sizes = ['small', 'medium', 'large'];
var sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};

function Menu(_ref) {
  var children = _ref.children,
      className = _ref.className,
      size = _ref.size,
      props = _objectWithoutProperties(_ref, _excluded);

  var isSize = size && sizeMap[size];
  var classes = (0, _classnames["default"])('menu', className, isSize);
  return /*#__PURE__*/_react["default"].createElement(_Element["default"], _extends({
    className: classes
  }, props), children);
}

Menu.Label = _MenuLabel["default"];
Menu.List = _MenuList["default"];
Menu.ListItem = _MenuListItem["default"];
Menu.Link = _MenuLink["default"];
Menu.propTypes = {
  className: _propTypes["default"].string,
  children: _propTypes["default"].node,
  component: _propTypes["default"].elementType,
  size: _propTypes["default"].oneOf(sizes)
};
Menu.defaultProps = {
  className: undefined,
  children: null,
  component: 'aside',
  size: undefined
};