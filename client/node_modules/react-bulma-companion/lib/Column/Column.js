"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Column;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Element = _interopRequireDefault(require("../Element"));

var _excluded = ["children", "className", "desktop", "fullhd", "mobile", "narrow", "offset", "size", "tablet", "touch", "widescreen"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var sizes = ['full', 'half', 'one-third', 'two-thirds', 'one-quarter', 'three-quarters', 'one-fifth', 'two-fifths', 'three-fifths', 'four-fifths', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];
var sizeMap = {};
var offsetMap = {};
sizes.forEach(function (size) {
  sizeMap[size] = "is-".concat(size);
  offsetMap[size] = "is-offset-".concat(size);
});

function Column(_ref) {
  var _classNames;

  var children = _ref.children,
      className = _ref.className,
      desktop = _ref.desktop,
      fullhd = _ref.fullhd,
      mobile = _ref.mobile,
      narrow = _ref.narrow,
      offset = _ref.offset,
      size = _ref.size,
      tablet = _ref.tablet,
      touch = _ref.touch,
      widescreen = _ref.widescreen,
      props = _objectWithoutProperties(_ref, _excluded);

  var isSize = size && sizeMap[size];
  var isOffset = offset && offsetMap[offset];
  var classes = (0, _classnames["default"])('column', className, isSize, isOffset, (_classNames = {}, _defineProperty(_classNames, "".concat(sizeMap[mobile.size], "-mobile"), !!mobile.size && sizes.includes(mobile.size)), _defineProperty(_classNames, "".concat(sizeMap[tablet.size], "-tablet"), !!tablet.size && sizes.includes(tablet.size)), _defineProperty(_classNames, "".concat(sizeMap[touch.size], "-touch"), !!touch.size && sizes.includes(touch.size)), _defineProperty(_classNames, "".concat(sizeMap[desktop.size], "-desktop"), !!desktop.size && sizes.includes(desktop.size)), _defineProperty(_classNames, "".concat(sizeMap[widescreen.size], "-widescreen"), !!widescreen.size && sizes.includes(widescreen.size)), _defineProperty(_classNames, "".concat(sizeMap[fullhd.size], "-fullhd"), !!fullhd.size && sizes.includes(fullhd.size)), _defineProperty(_classNames, "".concat(offsetMap[mobile.offset], "-mobile"), !!mobile.offset && sizes.includes(mobile.offset)), _defineProperty(_classNames, "".concat(offsetMap[tablet.offset], "-tablet"), !!tablet.offset && sizes.includes(tablet.offset)), _defineProperty(_classNames, "".concat(offsetMap[touch.offset], "-touch"), !!touch.offset && sizes.includes(touch.offset)), _defineProperty(_classNames, "".concat(offsetMap[desktop.offset], "-desktop"), !!desktop.offset && sizes.includes(desktop.offset)), _defineProperty(_classNames, "".concat(offsetMap[widescreen.offset], "-widescreen"), !!widescreen.offset && sizes.includes(widescreen.offset)), _defineProperty(_classNames, "".concat(offsetMap[fullhd.offset], "-fullhd"), !!fullhd.offset && sizes.includes(fullhd.offset)), _defineProperty(_classNames, 'is-narrow', narrow), _defineProperty(_classNames, 'is-narrow-mobile', mobile.narrow), _defineProperty(_classNames, 'is-narrow-tablet', tablet.narrow), _defineProperty(_classNames, 'is-narrow-touch', touch.narrow), _defineProperty(_classNames, 'is-narrow-desktop', desktop.narrow), _defineProperty(_classNames, 'is-narrow-widescreen', widescreen.narrow), _defineProperty(_classNames, 'is-narrow-fullhd', fullhd.narrow), _classNames));
  return /*#__PURE__*/_react["default"].createElement(_Element["default"], _extends({
    className: classes
  }, props), children);
}

Column.propTypes = {
  className: _propTypes["default"].string,
  children: _propTypes["default"].node,
  component: _propTypes["default"].elementType,
  size: _propTypes["default"].oneOf(sizes),
  offset: _propTypes["default"].oneOf(sizes),
  narrow: _propTypes["default"].bool,
  mobile: _propTypes["default"].shape({
    size: _propTypes["default"].oneOf(sizes),
    offset: _propTypes["default"].oneOf(sizes),
    narrow: _propTypes["default"].bool
  }),
  tablet: _propTypes["default"].shape({
    size: _propTypes["default"].oneOf(sizes),
    offset: _propTypes["default"].oneOf(sizes),
    narrow: _propTypes["default"].bool
  }),
  touch: _propTypes["default"].shape({
    size: _propTypes["default"].oneOf(sizes),
    offset: _propTypes["default"].oneOf(sizes),
    narrow: _propTypes["default"].bool
  }),
  desktop: _propTypes["default"].shape({
    size: _propTypes["default"].oneOf(sizes),
    offset: _propTypes["default"].oneOf(sizes),
    narrow: _propTypes["default"].bool
  }),
  widescreen: _propTypes["default"].shape({
    size: _propTypes["default"].oneOf(sizes),
    offset: _propTypes["default"].oneOf(sizes),
    narrow: _propTypes["default"].bool
  }),
  fullhd: _propTypes["default"].shape({
    size: _propTypes["default"].oneOf(sizes),
    offset: _propTypes["default"].oneOf(sizes),
    narrow: _propTypes["default"].bool
  })
};
Column.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  size: undefined,
  offset: undefined,
  narrow: false,
  mobile: {},
  tablet: {},
  touch: {},
  desktop: {},
  widescreen: {},
  fullhd: {}
};