"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Columns;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Element = _interopRequireDefault(require("../Element"));

var _excluded = ["activate", "centered", "children", "className", "desktop", "gap", "gapless", "multiline", "mobile", "vcentered", "tablet", "touch", "widescreen", "fullhd"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var gaps = ['0', '1', '2', '3', '4', '5', '6', '7', '8'];
var gapMap = {};
gaps.forEach(function (gap) {
  gapMap[gap] = "is-".concat(gap);
});

function Columns(_ref) {
  var _classNames;

  var activate = _ref.activate,
      centered = _ref.centered,
      children = _ref.children,
      className = _ref.className,
      desktop = _ref.desktop,
      gap = _ref.gap,
      gapless = _ref.gapless,
      multiline = _ref.multiline,
      mobile = _ref.mobile,
      vcentered = _ref.vcentered,
      tablet = _ref.tablet,
      touch = _ref.touch,
      widescreen = _ref.widescreen,
      fullhd = _ref.fullhd,
      props = _objectWithoutProperties(_ref, _excluded);

  var isGap = gap && gapMap[gap];
  var classes = (0, _classnames["default"])('columns', className, isGap, (_classNames = {}, _defineProperty(_classNames, "".concat(gapMap[mobile.gap], "-mobile"), !!mobile.gap && gaps.includes(mobile.gap)), _defineProperty(_classNames, "".concat(gapMap[tablet.gap], "-tablet"), !!tablet.gap && !tablet.only && gaps.includes(tablet.gap)), _defineProperty(_classNames, "".concat(gapMap[tablet.gap], "-tablet-only"), !!tablet.gap && tablet.only && gaps.includes(tablet.gap)), _defineProperty(_classNames, "".concat(gapMap[touch.gap], "-touch"), !!touch.gap && gaps.includes(touch.gap)), _defineProperty(_classNames, "".concat(gapMap[desktop.gap], "-desktop"), !!desktop.gap && !desktop.only && gaps.includes(desktop.gap)), _defineProperty(_classNames, "".concat(gapMap[desktop.gap], "-desktop-only"), !!desktop.gap && desktop.only && gaps.includes(desktop.gap)), _defineProperty(_classNames, "".concat(gapMap[widescreen.gap], "-widescreen"), !!widescreen.gap && !widescreen.only && gaps.includes(widescreen.gap)), _defineProperty(_classNames, "".concat(gapMap[widescreen.gap], "-widescreen-only"), !!widescreen.gap && widescreen.only && gaps.includes(widescreen.gap)), _defineProperty(_classNames, "".concat(gapMap[fullhd.gap], "-fullhd"), !!fullhd.gap && gaps.includes(fullhd.gap)), _defineProperty(_classNames, 'is-mobile', activate === 'mobile'), _defineProperty(_classNames, 'is-desktop', activate === 'desktop'), _defineProperty(_classNames, 'is-centered', centered), _defineProperty(_classNames, 'is-vcentered', vcentered), _defineProperty(_classNames, 'is-gapless', gapless), _defineProperty(_classNames, 'is-multiline', multiline), _defineProperty(_classNames, 'is-variable', !!gap || !!mobile.gap || !!tablet.gap || !!touch.gap || !!desktop.gap || !!widescreen.gap || !!fullhd.gap), _classNames));
  return /*#__PURE__*/_react["default"].createElement(_Element["default"], _extends({
    className: classes
  }, props), children);
}

Columns.propTypes = {
  className: _propTypes["default"].string,
  children: _propTypes["default"].node,
  component: _propTypes["default"].elementType,
  gap: _propTypes["default"].oneOf(gaps),
  mobile: _propTypes["default"].shape({
    gap: _propTypes["default"].oneOf(gaps)
  }),
  tablet: _propTypes["default"].shape({
    gap: _propTypes["default"].oneOf(gaps),
    only: _propTypes["default"].bool
  }),
  touch: _propTypes["default"].shape({
    gap: _propTypes["default"].oneOf(gaps)
  }),
  desktop: _propTypes["default"].shape({
    gap: _propTypes["default"].oneOf(gaps),
    only: _propTypes["default"].bool
  }),
  widescreen: _propTypes["default"].shape({
    gap: _propTypes["default"].oneOf(gaps),
    only: _propTypes["default"].bool
  }),
  fullhd: _propTypes["default"].shape({
    gap: _propTypes["default"].oneOf(gaps)
  }),
  activate: _propTypes["default"].oneOf(['mobile', 'tablet', 'desktop']),
  centered: _propTypes["default"].bool,
  vcentered: _propTypes["default"].bool,
  gapless: _propTypes["default"].bool,
  multiline: _propTypes["default"].bool
};
Columns.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  gap: undefined,
  mobile: {},
  tablet: {},
  touch: {},
  desktop: {},
  widescreen: {},
  fullhd: {},
  activate: 'tablet',
  centered: false,
  vcentered: false,
  gapless: false,
  multiline: false
};