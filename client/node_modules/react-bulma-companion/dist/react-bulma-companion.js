(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("react-bulma-companion", [], factory);
	else if(typeof exports === 'object')
		exports["react-bulma-companion"] = factory();
	else
		root["react-bulma-companion"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(4);


/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "Block", function() { return /* reexport */ Block; });
__webpack_require__.d(__webpack_exports__, "Box", function() { return /* reexport */ Box; });
__webpack_require__.d(__webpack_exports__, "Button", function() { return /* reexport */ Button; });
__webpack_require__.d(__webpack_exports__, "Buttons", function() { return /* reexport */ Buttons; });
__webpack_require__.d(__webpack_exports__, "Content", function() { return /* reexport */ Content; });
__webpack_require__.d(__webpack_exports__, "Delete", function() { return /* reexport */ Delete; });
__webpack_require__.d(__webpack_exports__, "Element", function() { return /* reexport */ Element_Element; });
__webpack_require__.d(__webpack_exports__, "Heading", function() { return /* reexport */ Heading; });
__webpack_require__.d(__webpack_exports__, "Icon", function() { return /* reexport */ Icon; });
__webpack_require__.d(__webpack_exports__, "Image", function() { return /* reexport */ Image_Image; });
__webpack_require__.d(__webpack_exports__, "Loader", function() { return /* reexport */ Loader; });
__webpack_require__.d(__webpack_exports__, "Notification", function() { return /* reexport */ Notification; });
__webpack_require__.d(__webpack_exports__, "Progress", function() { return /* reexport */ Progress; });
__webpack_require__.d(__webpack_exports__, "Table", function() { return /* reexport */ Table; });
__webpack_require__.d(__webpack_exports__, "Tag", function() { return /* reexport */ Tag; });
__webpack_require__.d(__webpack_exports__, "Tags", function() { return /* reexport */ Tags; });
__webpack_require__.d(__webpack_exports__, "Title", function() { return /* reexport */ Title; });
__webpack_require__.d(__webpack_exports__, "Breadcrumb", function() { return /* reexport */ Breadcrumb; });
__webpack_require__.d(__webpack_exports__, "Card", function() { return /* reexport */ Card; });
__webpack_require__.d(__webpack_exports__, "Dropdown", function() { return /* reexport */ Dropdown; });
__webpack_require__.d(__webpack_exports__, "Menu", function() { return /* reexport */ Menu; });
__webpack_require__.d(__webpack_exports__, "Message", function() { return /* reexport */ Message; });
__webpack_require__.d(__webpack_exports__, "Modal", function() { return /* reexport */ Modal; });
__webpack_require__.d(__webpack_exports__, "Navbar", function() { return /* reexport */ Navbar; });
__webpack_require__.d(__webpack_exports__, "Pagination", function() { return /* reexport */ Pagination; });
__webpack_require__.d(__webpack_exports__, "Panel", function() { return /* reexport */ Panel; });
__webpack_require__.d(__webpack_exports__, "Tabs", function() { return /* reexport */ Tabs; });
__webpack_require__.d(__webpack_exports__, "Checkbox", function() { return /* reexport */ Checkbox_Block; });
__webpack_require__.d(__webpack_exports__, "Control", function() { return /* reexport */ Control; });
__webpack_require__.d(__webpack_exports__, "Field", function() { return /* reexport */ Field; });
__webpack_require__.d(__webpack_exports__, "File", function() { return /* reexport */ File; });
__webpack_require__.d(__webpack_exports__, "Help", function() { return /* reexport */ Help_Block; });
__webpack_require__.d(__webpack_exports__, "Input", function() { return /* reexport */ Input; });
__webpack_require__.d(__webpack_exports__, "Label", function() { return /* reexport */ Label; });
__webpack_require__.d(__webpack_exports__, "Radio", function() { return /* reexport */ Radio; });
__webpack_require__.d(__webpack_exports__, "Select", function() { return /* reexport */ Select; });
__webpack_require__.d(__webpack_exports__, "Textarea", function() { return /* reexport */ Textarea; });
__webpack_require__.d(__webpack_exports__, "Column", function() { return /* reexport */ Column; });
__webpack_require__.d(__webpack_exports__, "Columns", function() { return /* reexport */ Columns; });
__webpack_require__.d(__webpack_exports__, "Container", function() { return /* reexport */ Container; });
__webpack_require__.d(__webpack_exports__, "Footer", function() { return /* reexport */ Footer; });
__webpack_require__.d(__webpack_exports__, "Hero", function() { return /* reexport */ Hero; });
__webpack_require__.d(__webpack_exports__, "Level", function() { return /* reexport */ Level; });
__webpack_require__.d(__webpack_exports__, "Media", function() { return /* reexport */ Media; });
__webpack_require__.d(__webpack_exports__, "Section", function() { return /* reexport */ Section; });
__webpack_require__.d(__webpack_exports__, "Tile", function() { return /* reexport */ Tile; });

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(1);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "prop-types"
var external_prop_types_ = __webpack_require__(0);
var external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(2);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// CONCATENATED MODULE: ./src/Element/Element.js
var _excluded = ["alignContent", "alignItems", "alignSelf", "backgroundColor", "children", "className", "clearfix", "clickable", "clipped", "component", "desktop", "display", "domRef", "flexDirection", "flexGrow", "flexShrink", "flexWrap", "font", "fullhd", "hidden", "invisible", "italic", "justifyContent", "margin", "marginBottom", "marginHorizontal", "marginLeft", "marginRight", "marginTop", "marginVertical", "mobile", "overlay", "padding", "paddingBottom", "paddingHorizontal", "paddingLeft", "paddingRight", "paddingTop", "paddingVertical", "pull", "radiusless", "relative", "screenReaderOnly", "shadowless", "tablet", "textAlign", "textColor", "textSize", "textTransform", "textWeight", "touch", "underlined", "unselectable", "widescreen"];

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }



 // Colors

var colors = ['white', 'black', 'light', 'dark', 'primary', 'link', 'info', 'success', 'warning', 'danger', 'black-bis', 'black-ter', 'grey-darker', 'grey-dark', 'grey', 'grey-light', 'grey-lighter', 'white-ter', 'white-bis', 'primary-light', 'link-light', 'info-light', 'success-light', 'warning-light', 'danger-light', 'primary-dark', 'link-dark', 'info-dark', 'success-dark', 'warning-dark', 'danger-dark']; // Spacing

var spacings = ['0', '1', '2', '3', '4', '5', '6', 'auto']; // Typography

var textSizes = ['1', '2', '3', '4', '5', '6', '7'];
var textSizeMap = {
  1: 'is-size-1',
  2: 'is-size-2',
  3: 'is-size-3',
  4: 'is-size-4',
  5: 'is-size-5',
  6: 'is-size-6',
  7: 'is-size-7'
};
var textAligns = ['center', 'justify', 'left', 'right'];
var textAlignMap = {
  center: 'has-text-centered',
  justify: 'has-text-justified',
  left: 'has-text-left',
  right: 'has-text-right'
};
var textTransforms = ['capitalize', 'lowercase', 'uppercase', 'italic', 'underline'];
var textTransformMap = {
  capitalize: 'is-capitalized',
  lowercase: 'is-lowercase',
  uppercase: 'is-uppercase',
  italic: 'is-italic',
  underline: 'is-underlined'
};
var textWeights = ['light', 'normal', 'medium', 'semibold', 'bold'];
var textWeightMap = {
  light: 'has-text-weight-light',
  normal: 'has-text-weight-normal',
  medium: 'has-text-weight-medium',
  semibold: 'has-text-weight-semibold',
  bold: 'has-text-weight-bold'
};
var fonts = ['sans-serif', 'monospace', 'primary', 'secondary', 'code'];
var fontMap = {
  'sans-serif': 'is-family-sans-serif',
  monospace: 'is-family-monospace',
  primary: 'is-family-primary',
  secondary: 'is-family-secondary',
  code: 'is-family-code'
}; // Visibility

var displays = ['block', 'flex', 'inline', 'inline-block', 'inline-flex'];
var displayMap = {
  block: 'is-block',
  flex: 'is-flex',
  inline: 'is-inline',
  'inline-block': 'is-inline-block',
  'inline-flex': 'is-inline-flex'
}; // Flex

var flexDirections = ['row', 'row-reverse', 'column', 'column-reverse'];
var flexDirectionMap = {
  row: 'is-flex-direction-row',
  'row-reverse': 'is-flex-direction-row-reverse',
  column: 'is-flex-direction-column',
  'column-reverse': 'is-flex-direction-column-reverse'
};
var flexWraps = ['nowrap', 'wrap', 'wrap-reverse'];
var flexWrapMap = {
  nowrap: 'is-flex-wrap-nowrap',
  wrap: 'is-flex-wrap-wrap',
  'wrap-reverse': 'is-flex-wrap-wrap-reverse'
};
var justifyContents = ['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly', 'start', 'end', 'left', 'right'];
var justifyContentMap = {
  'flex-start': 'is-justify-content-flex-start',
  'flex-end': 'is-justify-content-flex-end',
  center: 'is-justify-content-center',
  'space-between': 'is-justify-content-space-between',
  'space-around': 'is-justify-content-space-around',
  'space-evenly': 'is-justify-content-space-evenly',
  start: 'is-justify-content-start',
  end: 'is-justify-content-end',
  left: 'is-justify-content-left',
  right: 'is-justify-content-right'
};
var alignContents = ['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly', 'stretch', 'start', 'end', 'baseline'];
var alignContentMap = {
  'flex-start': 'is-align-content-flex-start',
  'flex-end': 'is-align-content-flex-end',
  center: 'is-align-content-center',
  'space-between': 'is-align-content-space-between',
  'space-around': 'is-align-content-space-around',
  'space-evenly': 'is-align-content-space-evenly',
  stretch: 'is-align-content-stretch',
  start: 'is-align-content-start',
  end: 'is-align-content-end',
  baseline: 'is-align-content-baseline'
};
var alignItemses = ['stretch', 'flex-start', 'flex-end', 'center', 'baseline', 'start', 'end', 'self-start', 'self-end'];
var alignItemsMap = {
  stretch: 'is-align-items-stretch',
  'flex-start': 'is-align-items-flex-start',
  'flex-end': 'is-align-items-flex-end',
  center: 'is-align-items-center',
  baseline: 'is-align-items-baseline',
  start: 'is-align-items-start',
  end: 'is-align-items-end',
  'self-start': 'is-align-items-self-start',
  'self-end': 'is-align-items-self-end'
};
var alignSelfs = ['auto', 'flex-start', 'flex-end', 'center', 'baseline', 'stretch'];
var alignSelfMap = {
  auto: 'is-align-self-auto',
  'flex-start': 'is-align-self-flex-start',
  'flex-end': 'is-align-self-flex-end',
  center: 'is-align-self-center',
  baseline: 'is-align-self-baseline',
  stretch: 'is-align-self-stretch'
};
var flexSizes = ['0', '1', '2', '3', '4', '5'];
var flexGrowMap = {};
var flexShrinkMap = {};
flexSizes.forEach(function (size) {
  flexGrowMap[size] = "is-flex-grow-".concat(size);
  flexShrinkMap[size] = "is-flex-shrink-".concat(size);
});
function Element_Element(_ref) {
  var _classNames;

  var alignContent = _ref.alignContent,
      alignItems = _ref.alignItems,
      alignSelf = _ref.alignSelf,
      backgroundColor = _ref.backgroundColor,
      children = _ref.children,
      className = _ref.className,
      clearfix = _ref.clearfix,
      clickable = _ref.clickable,
      clipped = _ref.clipped,
      component = _ref.component,
      desktop = _ref.desktop,
      display = _ref.display,
      domRef = _ref.domRef,
      flexDirection = _ref.flexDirection,
      flexGrow = _ref.flexGrow,
      flexShrink = _ref.flexShrink,
      flexWrap = _ref.flexWrap,
      font = _ref.font,
      fullhd = _ref.fullhd,
      hidden = _ref.hidden,
      invisible = _ref.invisible,
      italic = _ref.italic,
      justifyContent = _ref.justifyContent,
      margin = _ref.margin,
      marginBottom = _ref.marginBottom,
      marginHorizontal = _ref.marginHorizontal,
      marginLeft = _ref.marginLeft,
      marginRight = _ref.marginRight,
      marginTop = _ref.marginTop,
      marginVertical = _ref.marginVertical,
      mobile = _ref.mobile,
      overlay = _ref.overlay,
      padding = _ref.padding,
      paddingBottom = _ref.paddingBottom,
      paddingHorizontal = _ref.paddingHorizontal,
      paddingLeft = _ref.paddingLeft,
      paddingRight = _ref.paddingRight,
      paddingTop = _ref.paddingTop,
      paddingVertical = _ref.paddingVertical,
      pull = _ref.pull,
      radiusless = _ref.radiusless,
      relative = _ref.relative,
      screenReaderOnly = _ref.screenReaderOnly,
      shadowless = _ref.shadowless,
      tablet = _ref.tablet,
      textAlign = _ref.textAlign,
      textColor = _ref.textColor,
      textSize = _ref.textSize,
      textTransform = _ref.textTransform,
      textWeight = _ref.textWeight,
      touch = _ref.touch,
      underlined = _ref.underlined,
      unselectable = _ref.unselectable,
      widescreen = _ref.widescreen,
      props = _objectWithoutProperties(_ref, _excluded);

  var Element = component;
  var isTextSize = textSize && textSizeMap[textSize];
  var isTextAlign = textAlign && textAlignMap[textAlign];
  var isTextTransform = textTransform && textTransformMap[textTransform];
  var hasTextWeight = textWeight && textWeightMap[textWeight];
  var isFont = font && fontMap[font];
  var isDisplay = display && displayMap[display];
  var isFlexDirection = flexDirection && flexDirectionMap[flexDirection];
  var isFlexWrap = flexWrap && flexWrapMap[flexWrap];
  var isJustifyContent = justifyContent && justifyContentMap[justifyContent];
  var isAlignContent = alignContent && alignContentMap[alignContent];
  var isAlignItems = alignItems && alignItemsMap[alignItems];
  var isAlignSelf = alignSelf && alignSelfMap[alignSelf];
  var isFlexGrow = flexGrow && flexGrowMap[flexGrow];
  var isFlexShrink = flexShrink && flexShrinkMap[flexShrink];
  var classes = classnames_default()(className, isTextSize, isTextAlign, isTextTransform, hasTextWeight, isFont, isDisplay, isFlexDirection, isFlexWrap, isJustifyContent, isAlignContent, isAlignItems, isAlignSelf, isFlexGrow, isFlexShrink, (_classNames = {}, _defineProperty(_classNames, "has-background-".concat(backgroundColor), !!backgroundColor), _defineProperty(_classNames, "has-text-".concat(textColor), !!textColor), _defineProperty(_classNames, "m-".concat(margin), !!margin), _defineProperty(_classNames, "mt-".concat(marginTop), !!marginTop), _defineProperty(_classNames, "mr-".concat(marginRight), !!marginRight), _defineProperty(_classNames, "mb-".concat(marginBottom), !!marginBottom), _defineProperty(_classNames, "ml-".concat(marginLeft), !!marginLeft), _defineProperty(_classNames, "mx-".concat(marginHorizontal), !!marginHorizontal), _defineProperty(_classNames, "my-".concat(marginVertical), !!marginVertical), _defineProperty(_classNames, "p-".concat(padding), !!padding), _defineProperty(_classNames, "pt-".concat(paddingTop), !!paddingTop), _defineProperty(_classNames, "pr-".concat(paddingRight), !!paddingRight), _defineProperty(_classNames, "pb-".concat(paddingBottom), !!paddingBottom), _defineProperty(_classNames, "pl-".concat(paddingLeft), !!paddingLeft), _defineProperty(_classNames, "px-".concat(paddingHorizontal), !!paddingHorizontal), _defineProperty(_classNames, "py-".concat(paddingVertical), !!paddingVertical), _defineProperty(_classNames, "is-size-".concat(mobile.textSize, "-mobile"), !!mobile.textSize && textSizes.includes(mobile.textSize)), _defineProperty(_classNames, "is-size-".concat(touch.textSize, "-touch"), !!touch.textSize && textSizes.includes(touch.textSize)), _defineProperty(_classNames, "is-size-".concat(tablet.textSize, "-tablet"), !!tablet.textSize && textSizes.includes(tablet.textSize)), _defineProperty(_classNames, "is-size-".concat(desktop.textSize, "-desktop"), !!desktop.textSize && textSizes.includes(desktop.textSize)), _defineProperty(_classNames, "is-size-".concat(widescreen.textSize, "-widescreen"), !!widescreen.textSize && textSizes.includes(widescreen.textSize)), _defineProperty(_classNames, "is-size-".concat(fullhd.textSize, "-fullhd"), !!fullhd.textSize && textSizes.includes(fullhd.textSize)), _defineProperty(_classNames, "".concat(textAlignMap[mobile.textAlign], "-mobile"), !!mobile.textAlign && textAligns.includes(mobile.textAlign)), _defineProperty(_classNames, "".concat(textAlignMap[touch.textAlign], "-touch"), !!touch.textAlign && textAligns.includes(touch.textAlign)), _defineProperty(_classNames, "".concat(textAlignMap[tablet.textAlign], "-tablet-only"), !!tablet.textAlign && tablet.only && textAligns.includes(tablet.textAlign)), _defineProperty(_classNames, "".concat(textAlignMap[tablet.textAlign], "-tablet"), !!tablet.textAlign && !tablet.only && textAligns.includes(tablet.textAlign)), _defineProperty(_classNames, "".concat(textAlignMap[desktop.textAlign], "-desktop-only"), !!desktop.textAlign && desktop.only && textAligns.includes(desktop.textAlign)), _defineProperty(_classNames, "".concat(textAlignMap[desktop.textAlign], "-desktop"), !!desktop.textAlign && !desktop.only && textAligns.includes(desktop.textAlign)), _defineProperty(_classNames, "".concat(textAlignMap[widescreen.textAlign], "-widescreen-only"), !!widescreen.textAlign && widescreen.only && textAligns.includes(widescreen.textAlign)), _defineProperty(_classNames, "".concat(textAlignMap[widescreen.textAlign], "-widescreen"), !!widescreen.textAlign && !widescreen.only && textAligns.includes(widescreen.textAlign)), _defineProperty(_classNames, "".concat(textAlignMap[fullhd.textAlign], "-fullhd"), !!fullhd.textAlign && textAligns.includes(fullhd.textAlign)), _defineProperty(_classNames, "".concat(displayMap[mobile.display], "-mobile"), !!mobile.display && displays.includes(mobile.display)), _defineProperty(_classNames, "".concat(displayMap[touch.display], "-touch"), !!touch.display && displays.includes(touch.display)), _defineProperty(_classNames, "".concat(displayMap[tablet.display], "-tablet-only"), !!tablet.display && tablet.only && displays.includes(tablet.display)), _defineProperty(_classNames, "".concat(displayMap[tablet.display], "-tablet"), !!tablet.display && !tablet.only && displays.includes(tablet.display)), _defineProperty(_classNames, "".concat(displayMap[desktop.display], "-desktop-only"), !!desktop.display && desktop.only && displays.includes(desktop.display)), _defineProperty(_classNames, "".concat(displayMap[desktop.display], "-desktop"), !!desktop.display && !desktop.only && displays.includes(desktop.display)), _defineProperty(_classNames, "".concat(displayMap[widescreen.display], "-widescreen-only"), !!widescreen.display && widescreen.only && displays.includes(widescreen.display)), _defineProperty(_classNames, "".concat(displayMap[widescreen.display], "-widescreen"), !!widescreen.display && !widescreen.only && displays.includes(widescreen.display)), _defineProperty(_classNames, "".concat(displayMap[fullhd.display], "-fullhd"), !!fullhd.display && displays.includes(fullhd.display)), _defineProperty(_classNames, 'is-hidden-mobile', mobile.hidden), _defineProperty(_classNames, 'is-hidden-touch', touch.hidden), _defineProperty(_classNames, 'is-hidden-tablet-only', tablet.hidden && tablet.only), _defineProperty(_classNames, 'is-hidden-tablet', tablet.hidden && !tablet.only), _defineProperty(_classNames, 'is-hidden-desktop-only', desktop.hidden && desktop.only), _defineProperty(_classNames, 'is-hidden-desktop', desktop.hidden && !desktop.only), _defineProperty(_classNames, 'is-hidden-widescreen-only', widescreen.hidden && widescreen.only), _defineProperty(_classNames, 'is-hidden-widescreen', widescreen.hidden && !widescreen.only), _defineProperty(_classNames, 'is-hidden-fullhd', fullhd.hidden), _defineProperty(_classNames, 'is-italic', italic), _defineProperty(_classNames, 'is-underlined', underlined), _defineProperty(_classNames, 'is-invisible', invisible), _defineProperty(_classNames, 'is-hidden', hidden), _defineProperty(_classNames, 'is-sr-only', screenReaderOnly), _defineProperty(_classNames, 'is-pulled-left', pull === 'left'), _defineProperty(_classNames, 'is-pulled-right', pull === 'right'), _defineProperty(_classNames, 'is-clearfix', clearfix), _defineProperty(_classNames, 'is-overlay', overlay), _defineProperty(_classNames, 'is-clipped', clipped), _defineProperty(_classNames, 'is-radiusless', radiusless), _defineProperty(_classNames, 'is-shadowless', shadowless), _defineProperty(_classNames, 'is-unselectable', unselectable), _defineProperty(_classNames, 'is-clickable', clickable), _defineProperty(_classNames, 'is-relative', relative), _classNames));
  return /*#__PURE__*/external_react_default.a.createElement(Element, _extends({
    ref: domRef,
    className: classes
  }, props), children);
}
Element_Element.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  domRef: external_prop_types_default.a.object,
  backgroundColor: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(colors), external_prop_types_default.a.string]),
  textColor: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(colors), external_prop_types_default.a.string]),
  textSize: external_prop_types_default.a.oneOf(textSizes),
  textAlign: external_prop_types_default.a.oneOf(textAligns),
  textTransform: external_prop_types_default.a.oneOf(textTransforms),
  textWeight: external_prop_types_default.a.oneOf(textWeights),
  font: external_prop_types_default.a.oneOf(fonts),
  italic: external_prop_types_default.a.bool,
  underlined: external_prop_types_default.a.bool,
  display: external_prop_types_default.a.oneOf(displays),
  invisible: external_prop_types_default.a.bool,
  hidden: external_prop_types_default.a.bool,
  screenReaderOnly: external_prop_types_default.a.bool,
  flexDirection: external_prop_types_default.a.oneOf(flexDirections),
  flexWrap: external_prop_types_default.a.oneOf(flexWraps),
  justifyContent: external_prop_types_default.a.oneOf(justifyContents),
  alignContent: external_prop_types_default.a.oneOf(alignContents),
  alignItems: external_prop_types_default.a.oneOf(alignItemses),
  alignSelf: external_prop_types_default.a.oneOf(alignSelfs),
  flexGrow: external_prop_types_default.a.oneOf(flexSizes),
  flexShrink: external_prop_types_default.a.oneOf(flexSizes),
  pull: external_prop_types_default.a.oneOf(['left', 'right']),
  clearfix: external_prop_types_default.a.bool,
  overlay: external_prop_types_default.a.bool,
  clipped: external_prop_types_default.a.bool,
  radiusless: external_prop_types_default.a.bool,
  shadowless: external_prop_types_default.a.bool,
  unselectable: external_prop_types_default.a.bool,
  clickable: external_prop_types_default.a.bool,
  relative: external_prop_types_default.a.bool,
  margin: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  marginTop: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  marginRight: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  marginBottom: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  marginLeft: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  marginHorizontal: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  marginVertical: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  padding: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  paddingTop: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  paddingRight: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  paddingBottom: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  paddingLeft: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  paddingHorizontal: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  paddingVertical: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(spacings), external_prop_types_default.a.string, external_prop_types_default.a.number]),
  mobile: external_prop_types_default.a.shape({
    textSize: external_prop_types_default.a.oneOf(textSizes),
    textAlign: external_prop_types_default.a.oneOf(textAligns),
    display: external_prop_types_default.a.oneOf(displays),
    hidden: external_prop_types_default.a.bool
  }),
  touch: external_prop_types_default.a.shape({
    textSize: external_prop_types_default.a.oneOf(textSizes),
    textAlign: external_prop_types_default.a.oneOf(textAligns),
    display: external_prop_types_default.a.oneOf(displays),
    hidden: external_prop_types_default.a.bool
  }),
  tablet: external_prop_types_default.a.shape({
    textSize: external_prop_types_default.a.oneOf(textSizes),
    textAlign: external_prop_types_default.a.oneOf(textAligns),
    display: external_prop_types_default.a.oneOf(displays),
    hidden: external_prop_types_default.a.bool,
    only: external_prop_types_default.a.bool
  }),
  desktop: external_prop_types_default.a.shape({
    textSize: external_prop_types_default.a.oneOf(textSizes),
    textAlign: external_prop_types_default.a.oneOf(textAligns),
    display: external_prop_types_default.a.oneOf(displays),
    hidden: external_prop_types_default.a.bool,
    only: external_prop_types_default.a.bool
  }),
  widescreen: external_prop_types_default.a.shape({
    textSize: external_prop_types_default.a.oneOf(textSizes),
    textAlign: external_prop_types_default.a.oneOf(textAligns),
    display: external_prop_types_default.a.oneOf(displays),
    hidden: external_prop_types_default.a.bool,
    only: external_prop_types_default.a.bool
  }),
  fullhd: external_prop_types_default.a.shape({
    textSize: external_prop_types_default.a.oneOf(textSizes),
    textAlign: external_prop_types_default.a.oneOf(textAligns),
    display: external_prop_types_default.a.oneOf(displays),
    hidden: external_prop_types_default.a.bool
  })
};
Element_Element.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  domRef: undefined,
  backgroundColor: undefined,
  textColor: undefined,
  textSize: undefined,
  textAlign: undefined,
  textTransform: undefined,
  textWeight: undefined,
  font: undefined,
  italic: false,
  underlined: false,
  display: undefined,
  invisible: false,
  hidden: false,
  screenReaderOnly: false,
  flexDirection: undefined,
  flexWrap: undefined,
  justifyContent: undefined,
  alignContent: undefined,
  alignItems: undefined,
  alignSelf: undefined,
  flexGrow: undefined,
  flexShrink: undefined,
  pull: undefined,
  clearfix: false,
  overlay: false,
  clipped: false,
  radiusless: false,
  shadowless: false,
  unselectable: false,
  clickable: false,
  relative: false,
  margin: undefined,
  marginTop: undefined,
  marginRight: undefined,
  marginBottom: undefined,
  marginLeft: undefined,
  marginHorizontal: undefined,
  marginVertical: undefined,
  padding: undefined,
  paddingTop: undefined,
  paddingRight: undefined,
  paddingBottom: undefined,
  paddingLeft: undefined,
  paddingHorizontal: undefined,
  paddingVertical: undefined,
  mobile: {},
  touch: {},
  tablet: {},
  desktop: {},
  widescreen: {},
  fullhd: {}
};
// CONCATENATED MODULE: ./src/Element/index.js

// CONCATENATED MODULE: ./src/Block/Block.js
var Block_excluded = ["children", "className"];

function Block_extends() { Block_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Block_extends.apply(this, arguments); }

function Block_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Block_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Block_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function Block(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = Block_objectWithoutProperties(_ref, Block_excluded);

  var classes = classnames_default()('block', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Block_extends({
    className: classes
  }, props), children);
}
Block.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
Block.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Block/index.js

// CONCATENATED MODULE: ./src/Box/Box.js
var Box_excluded = ["children", "className"];

function Box_extends() { Box_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Box_extends.apply(this, arguments); }

function Box_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Box_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Box_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function Box(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = Box_objectWithoutProperties(_ref, Box_excluded);

  var classes = classnames_default()('box', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Box_extends({
    className: classes
  }, props), children);
}
Box.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
Box.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Box/index.js

// CONCATENATED MODULE: ./src/Button/Button.js
var Button_excluded = ["active", "children", "className", "color", "focused", "fullwidth", "hovered", "inverted", "light", "loading", "outlined", "responsive", "rounded", "selected", "size"];

function Button_extends() { Button_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Button_extends.apply(this, arguments); }

function Button_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Button_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Button_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* eslint react/button-has-type: 0 */




var Button_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark', 'text', 'ghost'];
var Button_colorMap = {};
Button_colors.forEach(function (color) {
  Button_colorMap[color] = "is-".concat(color);
});
var sizes = ['small', 'normal', 'medium', 'large'];
var Button_sizeMap = {
  small: 'is-small',
  normal: 'is-normal',
  medium: 'is-medium',
  large: 'is-large'
};
function Button(_ref) {
  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      focused = _ref.focused,
      fullwidth = _ref.fullwidth,
      hovered = _ref.hovered,
      inverted = _ref.inverted,
      light = _ref.light,
      loading = _ref.loading,
      outlined = _ref.outlined,
      responsive = _ref.responsive,
      rounded = _ref.rounded,
      selected = _ref.selected,
      size = _ref.size,
      props = Button_objectWithoutProperties(_ref, Button_excluded);

  var isColor = color && Button_colorMap[color];
  var isSize = size && Button_sizeMap[size];
  var classes = classnames_default()('button', className, isColor, isSize, {
    'is-light': light,
    'is-responsive': responsive,
    'is-fullwidth': fullwidth,
    'is-outlined': outlined,
    'is-inverted': inverted,
    'is-rounded': rounded,
    'is-hovered': hovered,
    'is-focused': focused,
    'is-active': active,
    'is-selected': selected,
    'is-loading': loading,
    'is-static': props["static"]
  }); // eslint-disable-next-line

  delete props["static"];
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Button_extends({
    className: classes
  }, props), children);
}
Button.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  type: external_prop_types_default.a.oneOf(['button', 'submit', 'reset']),
  color: external_prop_types_default.a.oneOf(Button_colors),
  light: external_prop_types_default.a.bool,
  size: external_prop_types_default.a.oneOf(sizes),
  responsive: external_prop_types_default.a.bool,
  fullwidth: external_prop_types_default.a.bool,
  outlined: external_prop_types_default.a.bool,
  inverted: external_prop_types_default.a.bool,
  rounded: external_prop_types_default.a.bool,
  hovered: external_prop_types_default.a.bool,
  focused: external_prop_types_default.a.bool,
  active: external_prop_types_default.a.bool,
  selected: external_prop_types_default.a.bool,
  loading: external_prop_types_default.a.bool,
  "static": external_prop_types_default.a.bool,
  disabled: external_prop_types_default.a.bool
};
Button.defaultProps = {
  className: undefined,
  children: null,
  component: 'button',
  type: 'button',
  color: undefined,
  light: false,
  size: undefined,
  responsive: false,
  fullwidth: false,
  outlined: false,
  inverted: false,
  rounded: false,
  hovered: false,
  focused: false,
  active: false,
  selected: false,
  loading: false,
  "static": false,
  disabled: false
};
// CONCATENATED MODULE: ./src/Button/index.js

// CONCATENATED MODULE: ./src/Buttons/Buttons.js
var Buttons_excluded = ["addons", "align", "children", "className", "size"];

function Buttons_extends() { Buttons_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Buttons_extends.apply(this, arguments); }

function Buttons_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Buttons_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Buttons_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Buttons_sizes = ['small', 'medium', 'large'];
var Buttons_sizeMap = {
  small: 'are-small',
  medium: 'are-medium',
  large: 'are-large'
};
var aligns = ['center', 'right'];
var alignMap = {
  center: 'is-centered',
  right: 'is-right'
};
function Buttons(_ref) {
  var addons = _ref.addons,
      align = _ref.align,
      children = _ref.children,
      className = _ref.className,
      size = _ref.size,
      props = Buttons_objectWithoutProperties(_ref, Buttons_excluded);

  var areSize = size && Buttons_sizeMap[size];
  var isAlign = align && alignMap[align];
  var classes = classnames_default()('buttons', className, areSize, isAlign, {
    'has-addons': addons
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Buttons_extends({
    className: classes
  }, props), children);
}
Buttons.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(Buttons_sizes),
  addons: external_prop_types_default.a.bool,
  align: external_prop_types_default.a.oneOf(aligns)
};
Buttons.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  size: undefined,
  addons: false,
  align: undefined
};
// CONCATENATED MODULE: ./src/Buttons/index.js

// CONCATENATED MODULE: ./src/Content/Content.js
var Content_excluded = ["children", "className", "size"];

function Content_extends() { Content_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Content_extends.apply(this, arguments); }

function Content_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Content_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Content_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Content_sizes = ['small', 'normal', 'medium', 'large'];
var Content_sizeMap = {
  small: 'is-small',
  normal: 'is-normal',
  medium: 'is-medium',
  large: 'is-large'
};
function Content(_ref) {
  var children = _ref.children,
      className = _ref.className,
      size = _ref.size,
      props = Content_objectWithoutProperties(_ref, Content_excluded);

  var isSize = size && Content_sizeMap[size];
  var classes = classnames_default()('content', className, isSize);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Content_extends({
    className: classes
  }, props), children);
}
Content.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(Content_sizes)
};
Content.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  size: undefined
};
// CONCATENATED MODULE: ./src/Content/index.js

// CONCATENATED MODULE: ./src/Delete/Delete.js
var Delete_excluded = ["className", "size"];

function Delete_extends() { Delete_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Delete_extends.apply(this, arguments); }

function Delete_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Delete_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Delete_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Delete_sizes = ['small', 'medium', 'large'];
var Delete_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
function Delete(_ref) {
  var className = _ref.className,
      size = _ref.size,
      props = Delete_objectWithoutProperties(_ref, Delete_excluded);

  var isSize = size && Delete_sizeMap[size];
  var classes = classnames_default()('delete', className, isSize);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Delete_extends({
    type: "button",
    className: classes
  }, props));
}
Delete.propTypes = {
  className: external_prop_types_default.a.string,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(Delete_sizes)
};
Delete.defaultProps = {
  className: undefined,
  component: 'button',
  size: undefined
};
// CONCATENATED MODULE: ./src/Delete/index.js

// CONCATENATED MODULE: ./src/Heading/Heading.js
var Heading_excluded = ["children", "className"];

function Heading_extends() { Heading_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Heading_extends.apply(this, arguments); }

function Heading_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Heading_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Heading_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function Heading(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = Heading_objectWithoutProperties(_ref, Heading_excluded);

  var classes = classnames_default()('heading', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Heading_extends({
    className: classes
  }, props), children);
}
Heading.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
Heading.defaultProps = {
  className: undefined,
  children: null,
  component: 'p'
};
// CONCATENATED MODULE: ./src/Heading/index.js

// CONCATENATED MODULE: ./src/Icon/IconText/IconText.js
var IconText_excluded = ["children", "className", "color"];

function IconText_extends() { IconText_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return IconText_extends.apply(this, arguments); }

function IconText_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function IconText_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = IconText_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function IconText_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var IconText_colors = ['white', 'black', 'light', 'dark', 'primary', 'link', 'info', 'success', 'warning', 'danger', 'black-bis', 'black-ter', 'grey-dark', 'grey', 'grey-light', 'grey-lighter', 'white-ter', 'white-bis', 'primary-light', 'link-light', 'info-light', 'success-light', 'warning-light', 'danger-light', 'primary-dark', 'link-dark', 'info-dark', 'success-dark', 'warning-dark', 'danger-dark'];
function IconText(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      props = IconText_objectWithoutProperties(_ref, IconText_excluded);

  var classes = classnames_default()('icon-text', className, IconText_defineProperty({}, "has-text-".concat(color), !!color));
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, IconText_extends({
    className: classes
  }, props), children);
}
IconText.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(IconText_colors), external_prop_types_default.a.string])
};
IconText.defaultProps = {
  className: undefined,
  children: null,
  color: undefined,
  component: 'span'
};
// CONCATENATED MODULE: ./src/Icon/IconText/index.js

// CONCATENATED MODULE: ./src/Icon/Icon.js
var Icon_excluded = ["align", "children", "className", "color", "size"];

function Icon_extends() { Icon_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Icon_extends.apply(this, arguments); }

function Icon_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Icon_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Icon_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






var Icon_colors = ['white', 'black', 'light', 'dark', 'primary', 'link', 'info', 'success', 'warning', 'danger', 'black-bis', 'black-ter', 'grey-dark', 'grey', 'grey-light', 'grey-lighter', 'white-ter', 'white-bis', 'primary-light', 'link-light', 'info-light', 'success-light', 'warning-light', 'danger-light', 'primary-dark', 'link-dark', 'info-dark', 'success-dark', 'warning-dark', 'danger-dark'];
var Icon_sizes = ['small', 'medium', 'large'];
var Icon_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
var Icon_aligns = ['left', 'right'];
var Icon_alignMap = {
  left: 'is-left',
  right: 'is-right'
};
function Icon(_ref) {
  var align = _ref.align,
      children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      size = _ref.size,
      props = Icon_objectWithoutProperties(_ref, Icon_excluded);

  var isSize = size && Icon_sizeMap[size];
  var isAlign = align && Icon_alignMap[align];
  var classes = classnames_default()('icon', className, isSize, isAlign);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Icon_extends({
    className: classes
  }, props, {
    textColor: color
  }), children);
}
Icon.Text = IconText;
Icon.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOfType([external_prop_types_default.a.oneOf(Icon_colors), external_prop_types_default.a.string]),
  size: external_prop_types_default.a.oneOf(Icon_sizes),
  align: external_prop_types_default.a.oneOf(Icon_aligns)
};
Icon.defaultProps = {
  className: undefined,
  children: null,
  component: 'span',
  color: undefined,
  size: undefined,
  align: undefined
};
// CONCATENATED MODULE: ./src/Icon/index.js

// CONCATENATED MODULE: ./src/Image/ImageContent/ImageContent.js
var ImageContent_excluded = ["className", "rounded"];

function ImageContent_extends() { ImageContent_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ImageContent_extends.apply(this, arguments); }

function ImageContent_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ImageContent_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function ImageContent_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function Image(_ref) {
  var className = _ref.className,
      rounded = _ref.rounded,
      props = ImageContent_objectWithoutProperties(_ref, ImageContent_excluded);

  var classes = classnames_default()('image', className, {
    'is-rounded': rounded
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, ImageContent_extends({
    className: classes
  }, props));
}
Image.propTypes = {
  className: external_prop_types_default.a.string,
  component: external_prop_types_default.a.elementType,
  rounded: external_prop_types_default.a.bool
};
Image.defaultProps = {
  className: undefined,
  component: 'img',
  rounded: false
};
// CONCATENATED MODULE: ./src/Image/ImageContent/index.js

// CONCATENATED MODULE: ./src/Image/Image.js
var Image_excluded = ["children", "className", "fullwidth", "ratio", "size"];

function Image_extends() { Image_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Image_extends.apply(this, arguments); }

function Image_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Image_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Image_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }






var Image_sizes = ['16x16', '24x24', '32x32', '48x48', '64x64', '96x96', '128x128'];
var Image_sizeMap = {};
Image_sizes.forEach(function (size) {
  Image_sizeMap[size] = "is-".concat(size);
});
var ratios = ['square', '1by1', '5by4', '4by3', '3by2', '5by3', '16by9', '2by1', '3by1', '4by5', '3by4', '2by3', '3by5', '9by16', '1by2', '1by3'];
var ratioMap = {};
ratios.forEach(function (ratio) {
  ratioMap[ratio] = "is-".concat(ratio);
});
function Image_Image(_ref) {
  var children = _ref.children,
      className = _ref.className,
      fullwidth = _ref.fullwidth,
      ratio = _ref.ratio,
      size = _ref.size,
      props = Image_objectWithoutProperties(_ref, Image_excluded);

  var isSize = size && Image_sizeMap[size];
  var isRatio = ratio && ratioMap[ratio];
  var classes = classnames_default()('image', className, isSize, isRatio, {
    'is-fullwidth': fullwidth
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Image_extends({
    className: classes
  }, props), children);
}
Image_Image.Content = Image;
Image_Image.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(Image_sizes),
  ratio: external_prop_types_default.a.oneOf(ratios),
  fullwidth: external_prop_types_default.a.bool
};
Image_Image.defaultProps = {
  className: undefined,
  children: null,
  component: 'figure',
  size: undefined,
  ratio: undefined,
  fullwidth: false
};
// CONCATENATED MODULE: ./src/Image/index.js

// CONCATENATED MODULE: ./src/Loader/Loader.js
var Loader_excluded = ["className"];

function Loader_extends() { Loader_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Loader_extends.apply(this, arguments); }

function Loader_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Loader_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Loader_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function Loader(_ref) {
  var className = _ref.className,
      props = Loader_objectWithoutProperties(_ref, Loader_excluded);

  var classes = classnames_default()('loader', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Loader_extends({
    className: classes
  }, props));
}
Loader.propTypes = {
  className: external_prop_types_default.a.string,
  component: external_prop_types_default.a.elementType
};
Loader.defaultProps = {
  className: undefined,
  component: 'span'
};
// CONCATENATED MODULE: ./src/Loader/index.js

// CONCATENATED MODULE: ./src/Notification/Notification.js
var Notification_excluded = ["children", "className", "color", "component", "light"];

function Notification_extends() { Notification_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Notification_extends.apply(this, arguments); }

function Notification_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Notification_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Notification_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Notification_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var Notification_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
function Notification(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      component = _ref.component,
      light = _ref.light,
      props = Notification_objectWithoutProperties(_ref, Notification_excluded);

  var isColor = color && Notification_colorMap[color];
  var classes = classnames_default()('notification', className, isColor, {
    'is-light': light
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Notification_extends({
    className: classes
  }, props), children);
}
Notification.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(Notification_colors),
  light: external_prop_types_default.a.bool
};
Notification.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  color: undefined,
  light: false
};
// CONCATENATED MODULE: ./src/Notification/index.js

// CONCATENATED MODULE: ./src/Progress/Progress.js
var Progress_excluded = ["children", "className", "color", "size"];

function Progress_extends() { Progress_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Progress_extends.apply(this, arguments); }

function Progress_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Progress_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Progress_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Progress_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var Progress_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
var Progress_sizes = ['small', 'medium', 'large'];
var Progress_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
function Progress(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      size = _ref.size,
      props = Progress_objectWithoutProperties(_ref, Progress_excluded);

  var isColor = color && Progress_colorMap[color];
  var isSize = size && Progress_sizeMap[size];
  var classes = classnames_default()('progress', className, isColor, isSize);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Progress_extends({
    className: classes
  }, props), children);
}
Progress.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(Progress_colors),
  size: external_prop_types_default.a.oneOf(Progress_sizes)
};
Progress.defaultProps = {
  className: undefined,
  children: null,
  component: 'progress',
  color: undefined,
  size: undefined
};
// CONCATENATED MODULE: ./src/Progress/index.js

// CONCATENATED MODULE: ./src/Table/TableHead/TableHead.js
var TableHead_excluded = ["children", "className"];

function TableHead_extends() { TableHead_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return TableHead_extends.apply(this, arguments); }

function TableHead_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = TableHead_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function TableHead_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




function TableHead(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = TableHead_objectWithoutProperties(_ref, TableHead_excluded);

  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, TableHead_extends({
    className: className
  }, props), children);
}
TableHead.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
TableHead.defaultProps = {
  className: undefined,
  children: null,
  component: 'thead'
};
// CONCATENATED MODULE: ./src/Table/TableHead/index.js

// CONCATENATED MODULE: ./src/Table/TableFoot/TableFoot.js
var TableFoot_excluded = ["children", "className"];

function TableFoot_extends() { TableFoot_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return TableFoot_extends.apply(this, arguments); }

function TableFoot_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = TableFoot_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function TableFoot_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




function TableFoot(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = TableFoot_objectWithoutProperties(_ref, TableFoot_excluded);

  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, TableFoot_extends({
    className: className
  }, props), children);
}
TableFoot.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
TableFoot.defaultProps = {
  className: undefined,
  children: null,
  component: 'tfoot'
};
// CONCATENATED MODULE: ./src/Table/TableFoot/index.js

// CONCATENATED MODULE: ./src/Table/TableBody/TableBody.js
var TableBody_excluded = ["children", "className"];

function TableBody_extends() { TableBody_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return TableBody_extends.apply(this, arguments); }

function TableBody_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = TableBody_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function TableBody_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




function TableBody(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = TableBody_objectWithoutProperties(_ref, TableBody_excluded);

  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, TableBody_extends({
    className: className
  }, props), children);
}
TableBody.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
TableBody.defaultProps = {
  className: undefined,
  children: null,
  component: 'tbody'
};
// CONCATENATED MODULE: ./src/Table/TableBody/index.js

// CONCATENATED MODULE: ./src/Table/TableRow/TableRow.js
var TableRow_excluded = ["children", "className", "selected"];

function TableRow_extends() { TableRow_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return TableRow_extends.apply(this, arguments); }

function TableRow_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = TableRow_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function TableRow_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function TableRow(_ref) {
  var children = _ref.children,
      className = _ref.className,
      selected = _ref.selected,
      props = TableRow_objectWithoutProperties(_ref, TableRow_excluded);

  var classes = classnames_default()(className, {
    'is-selected': selected
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, TableRow_extends({
    className: classes
  }, props), children);
}
TableRow.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  selected: external_prop_types_default.a.bool
};
TableRow.defaultProps = {
  className: undefined,
  children: null,
  component: 'tr',
  selected: false
};
// CONCATENATED MODULE: ./src/Table/TableRow/index.js

// CONCATENATED MODULE: ./src/Table/TableHeadCell/TableHeadCell.js
var TableHeadCell_excluded = ["children", "className", "color", "narrow", "selected", "vcentered"];

function TableHeadCell_extends() { TableHeadCell_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return TableHeadCell_extends.apply(this, arguments); }

function TableHeadCell_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = TableHeadCell_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function TableHeadCell_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var TableHeadCell_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var TableHeadCell_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
function TableHeadCell(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      narrow = _ref.narrow,
      selected = _ref.selected,
      vcentered = _ref.vcentered,
      props = TableHeadCell_objectWithoutProperties(_ref, TableHeadCell_excluded);

  var isColor = color && TableHeadCell_colorMap[color];
  var classes = classnames_default()(className, isColor, {
    'is-selected': selected,
    'is-narrow': narrow,
    'is-vcentered': vcentered
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, TableHeadCell_extends({
    className: classes
  }, props), children);
}
TableHeadCell.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(TableHeadCell_colors),
  selected: external_prop_types_default.a.bool,
  narrow: external_prop_types_default.a.bool,
  vcentered: external_prop_types_default.a.bool
};
TableHeadCell.defaultProps = {
  className: undefined,
  children: null,
  component: 'th',
  color: undefined,
  selected: false,
  narrow: false,
  vcentered: false
};
// CONCATENATED MODULE: ./src/Table/TableHeadCell/index.js

// CONCATENATED MODULE: ./src/Table/TableDataCell/TableDataCell.js
var TableDataCell_excluded = ["children", "className", "color", "narrow", "selected", "vcentered"];

function TableDataCell_extends() { TableDataCell_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return TableDataCell_extends.apply(this, arguments); }

function TableDataCell_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = TableDataCell_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function TableDataCell_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var TableDataCell_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var TableDataCell_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
function TableDataCell(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      narrow = _ref.narrow,
      selected = _ref.selected,
      vcentered = _ref.vcentered,
      props = TableDataCell_objectWithoutProperties(_ref, TableDataCell_excluded);

  var isColor = color && TableDataCell_colorMap[color];
  var classes = classnames_default()(className, isColor, {
    'is-selected': selected,
    'is-narrow': narrow,
    'is-vcentered': vcentered
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, TableDataCell_extends({
    className: classes
  }, props), children);
}
TableDataCell.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(TableDataCell_colors),
  selected: external_prop_types_default.a.bool,
  narrow: external_prop_types_default.a.bool,
  vcentered: external_prop_types_default.a.bool
};
TableDataCell.defaultProps = {
  className: undefined,
  children: null,
  component: 'td',
  color: undefined,
  selected: false,
  narrow: false,
  vcentered: false
};
// CONCATENATED MODULE: ./src/Table/TableDataCell/index.js

// CONCATENATED MODULE: ./src/Table/TableContainer/TableContainer.js
var TableContainer_excluded = ["children", "className"];

function TableContainer_extends() { TableContainer_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return TableContainer_extends.apply(this, arguments); }

function TableContainer_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = TableContainer_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function TableContainer_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function TableContainer(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = TableContainer_objectWithoutProperties(_ref, TableContainer_excluded);

  var classes = classnames_default()('table-container', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, TableContainer_extends({
    className: classes
  }, props), children);
}
TableContainer.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
TableContainer.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Table/TableContainer/index.js

// CONCATENATED MODULE: ./src/Table/Table.js
var Table_excluded = ["bordered", "children", "className", "fullwidth", "hoverable", "narrow", "striped"];

function Table_extends() { Table_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Table_extends.apply(this, arguments); }

function Table_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Table_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Table_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }












function Table(_ref) {
  var bordered = _ref.bordered,
      children = _ref.children,
      className = _ref.className,
      fullwidth = _ref.fullwidth,
      hoverable = _ref.hoverable,
      narrow = _ref.narrow,
      striped = _ref.striped,
      props = Table_objectWithoutProperties(_ref, Table_excluded);

  var classes = classnames_default()('table', className, {
    'is-bordered': bordered,
    'is-striped': striped,
    'is-narrow': narrow,
    'is-hoverable': hoverable,
    'is-fullwidth': fullwidth
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Table_extends({
    className: classes
  }, props), children);
}
Table.Head = TableHead;
Table.Foot = TableFoot;
Table.Body = TableBody;
Table.Row = TableRow;
Table.HeadCell = TableHeadCell;
Table.DataCell = TableDataCell;
Table.Container = TableContainer;
Table.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  bordered: external_prop_types_default.a.bool,
  striped: external_prop_types_default.a.bool,
  narrow: external_prop_types_default.a.bool,
  hoverable: external_prop_types_default.a.bool,
  fullwidth: external_prop_types_default.a.bool
};
Table.defaultProps = {
  className: undefined,
  children: null,
  component: 'table',
  bordered: false,
  striped: false,
  narrow: false,
  hoverable: false,
  fullwidth: false
};
// CONCATENATED MODULE: ./src/Table/index.js

// CONCATENATED MODULE: ./src/Tag/Tag.js
var Tag_excluded = ["children", "className", "color", "light", "rounded", "size"];

function Tag_extends() { Tag_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Tag_extends.apply(this, arguments); }

function Tag_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Tag_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Tag_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function Tag(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      light = _ref.light,
      rounded = _ref.rounded,
      size = _ref.size,
      props = Tag_objectWithoutProperties(_ref, Tag_excluded);

  // Colors
  var colorMap = {
    primary: 'is-primary',
    link: 'is-link',
    info: 'is-info',
    success: 'is-success',
    warning: 'is-warning',
    danger: 'is-danger',
    white: 'is-white',
    black: 'is-black',
    light: 'is-light',
    dark: 'is-dark'
  };
  var isColor = color && colorMap[color]; // Sizes

  var sizeMap = {
    normal: 'is-normal',
    medium: 'is-medium',
    large: 'is-large'
  };
  var isSize = size && sizeMap[size];
  var classes = classnames_default()('tag', className, isColor, isSize, {
    'is-light': light,
    'is-rounded': rounded,
    'is-delete': props["delete"]
  }); // eslint-disable-next-line

  delete props["delete"];
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Tag_extends({
    className: classes
  }, props), children);
}
Tag.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark']),
  light: external_prop_types_default.a.bool,
  size: external_prop_types_default.a.oneOf(['normal', 'medium', 'large']),
  rounded: external_prop_types_default.a.bool,
  "delete": external_prop_types_default.a.bool
};
Tag.defaultProps = {
  className: undefined,
  children: null,
  component: 'span',
  color: undefined,
  light: false,
  size: undefined,
  rounded: false,
  "delete": false
};
// CONCATENATED MODULE: ./src/Tag/index.js

// CONCATENATED MODULE: ./src/Tags/Tags.js
var Tags_excluded = ["addons", "align", "children", "className", "size"];

function Tags_extends() { Tags_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Tags_extends.apply(this, arguments); }

function Tags_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Tags_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Tags_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Tags_sizes = ['medium', 'large'];
var Tags_sizeMap = {
  medium: 'are-medium',
  large: 'are-large'
};
var Tags_aligns = ['center', 'right'];
var Tags_alignMap = {
  center: 'is-centered',
  right: 'is-right'
};
function Tags(_ref) {
  var addons = _ref.addons,
      align = _ref.align,
      children = _ref.children,
      className = _ref.className,
      size = _ref.size,
      props = Tags_objectWithoutProperties(_ref, Tags_excluded);

  var areSize = size && Tags_sizeMap[size];
  var isAlign = align && Tags_alignMap[align];
  var classes = classnames_default()('tags', className, areSize, isAlign, {
    'has-addons': addons
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Tags_extends({
    className: classes
  }, props), children);
}
Tags.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(Tags_sizes),
  addons: external_prop_types_default.a.bool,
  align: external_prop_types_default.a.oneOf(Tags_aligns)
};
Tags.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  size: undefined,
  addons: false,
  align: undefined
};
// CONCATENATED MODULE: ./src/Tags/index.js

// CONCATENATED MODULE: ./src/Title/Title.js
var Title_excluded = ["children", "className", "size", "spaced", "subtitle"];

function Title_extends() { Title_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Title_extends.apply(this, arguments); }

function Title_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Title_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Title_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Title_sizes = ['1', '2', '3', '4', '5', '6'];
var Title_sizeMap = {};
Title_sizes.forEach(function (size) {
  Title_sizeMap[size] = "is-".concat(size);
});
function Title(_ref) {
  var children = _ref.children,
      className = _ref.className,
      size = _ref.size,
      spaced = _ref.spaced,
      subtitle = _ref.subtitle,
      props = Title_objectWithoutProperties(_ref, Title_excluded);

  var isTitle = !subtitle ? 'title' : 'subtitle';
  var isSize = size && Title_sizeMap[size];
  var classes = classnames_default()(isTitle, className, isSize, {
    'is-spaced': spaced
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Title_extends({
    className: classes
  }, props), children);
}
Title.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  subtitle: external_prop_types_default.a.bool,
  size: external_prop_types_default.a.oneOf(Title_sizes),
  spaced: external_prop_types_default.a.bool
};
Title.defaultProps = {
  className: undefined,
  children: null,
  component: 'p',
  subtitle: false,
  size: undefined,
  spaced: false
};
// CONCATENATED MODULE: ./src/Title/index.js

// CONCATENATED MODULE: ./src/Breadcrumb/BreadcrumbList/BreadcrumbList.js
var BreadcrumbList_excluded = ["children", "className"];

function BreadcrumbList_extends() { BreadcrumbList_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return BreadcrumbList_extends.apply(this, arguments); }

function BreadcrumbList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = BreadcrumbList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function BreadcrumbList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function BreadcrumbList(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = BreadcrumbList_objectWithoutProperties(_ref, BreadcrumbList_excluded);

  var classes = classnames_default()(className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, BreadcrumbList_extends({
    className: classes
  }, props), children);
}
BreadcrumbList.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
BreadcrumbList.defaultProps = {
  className: undefined,
  children: null,
  component: 'ul'
};
// CONCATENATED MODULE: ./src/Breadcrumb/BreadcrumbList/index.js

// CONCATENATED MODULE: ./src/Breadcrumb/BreadcrumbListItem/BreadcrumbListItem.js
var BreadcrumbListItem_excluded = ["active", "className", "children"];

function BreadcrumbListItem_extends() { BreadcrumbListItem_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return BreadcrumbListItem_extends.apply(this, arguments); }

function BreadcrumbListItem_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = BreadcrumbListItem_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function BreadcrumbListItem_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function BreadcrumbListItem(_ref) {
  var active = _ref.active,
      className = _ref.className,
      children = _ref.children,
      props = BreadcrumbListItem_objectWithoutProperties(_ref, BreadcrumbListItem_excluded);

  var classes = classnames_default()(className, {
    'is-active': active
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, BreadcrumbListItem_extends({
    className: classes
  }, props), children);
}
BreadcrumbListItem.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  active: external_prop_types_default.a.bool
};
BreadcrumbListItem.defaultProps = {
  className: undefined,
  children: null,
  component: 'li',
  active: false
};
// CONCATENATED MODULE: ./src/Breadcrumb/BreadcrumbListItem/index.js

// CONCATENATED MODULE: ./src/Breadcrumb/Breadcrumb.js
var Breadcrumb_excluded = ["align", "children", "className", "separator", "size"];

function Breadcrumb_extends() { Breadcrumb_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Breadcrumb_extends.apply(this, arguments); }

function Breadcrumb_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Breadcrumb_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Breadcrumb_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }







var Breadcrumb_aligns = ['center', 'right'];
var Breadcrumb_alignMap = {
  center: 'is-centered',
  right: 'is-right'
};
var separators = ['arrow', 'bullet', 'dot', 'succeeds'];
var separatorMap = {
  arrow: 'has-arrow-separator',
  bullet: 'has-bullet-separator',
  dot: 'has-dot-separator',
  succeeds: 'has-succeeds-separator'
};
var Breadcrumb_sizes = ['small', 'medium', 'large'];
var Breadcrumb_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
function Breadcrumb(_ref) {
  var align = _ref.align,
      children = _ref.children,
      className = _ref.className,
      separator = _ref.separator,
      size = _ref.size,
      props = Breadcrumb_objectWithoutProperties(_ref, Breadcrumb_excluded);

  var isAlign = align && Breadcrumb_alignMap[align];
  var isSeparator = separator && separatorMap[separator];
  var isSize = size && Breadcrumb_sizeMap[size];
  var classes = classnames_default()('breadcrumb', className, isAlign, isSeparator, isSize);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Breadcrumb_extends({
    className: classes
  }, props), children);
}
Breadcrumb.List = BreadcrumbList;
Breadcrumb.ListItem = BreadcrumbListItem;
Breadcrumb.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  align: external_prop_types_default.a.oneOf(Breadcrumb_aligns),
  separator: external_prop_types_default.a.oneOf(separators),
  size: external_prop_types_default.a.oneOf(Breadcrumb_sizes)
};
Breadcrumb.defaultProps = {
  className: undefined,
  children: null,
  component: 'nav',
  align: undefined,
  separator: undefined,
  size: undefined
};
// CONCATENATED MODULE: ./src/Breadcrumb/index.js

// CONCATENATED MODULE: ./src/Card/CardContent/CardContent.js
var CardContent_excluded = ["children", "className"];

function CardContent_extends() { CardContent_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return CardContent_extends.apply(this, arguments); }

function CardContent_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = CardContent_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function CardContent_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function CardContent(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = CardContent_objectWithoutProperties(_ref, CardContent_excluded);

  var classes = classnames_default()('card-content', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, CardContent_extends({
    className: classes
  }, props), children);
}
CardContent.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
CardContent.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Card/CardContent/index.js

// CONCATENATED MODULE: ./src/Card/CardFooter/CardFooter.js
var CardFooter_excluded = ["children", "className"];

function CardFooter_extends() { CardFooter_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return CardFooter_extends.apply(this, arguments); }

function CardFooter_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = CardFooter_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function CardFooter_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function CardFooter(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = CardFooter_objectWithoutProperties(_ref, CardFooter_excluded);

  var classes = classnames_default()('card-footer', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, CardFooter_extends({
    className: classes
  }, props), children);
}
CardFooter.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
CardFooter.defaultProps = {
  className: undefined,
  children: null,
  component: 'footer'
};
// CONCATENATED MODULE: ./src/Card/CardFooter/index.js

// CONCATENATED MODULE: ./src/Card/CardFooterItem/CardFooterItem.js
var CardFooterItem_excluded = ["children", "className"];

function CardFooterItem_extends() { CardFooterItem_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return CardFooterItem_extends.apply(this, arguments); }

function CardFooterItem_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = CardFooterItem_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function CardFooterItem_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function CardFooterItem(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = CardFooterItem_objectWithoutProperties(_ref, CardFooterItem_excluded);

  var classes = classnames_default()('card-footer-item', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, CardFooterItem_extends({
    className: classes
  }, props), children);
}
CardFooterItem.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
CardFooterItem.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Card/CardFooterItem/index.js

// CONCATENATED MODULE: ./src/Card/CardHeader/CardHeader.js
var CardHeader_excluded = ["children", "className"];

function CardHeader_extends() { CardHeader_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return CardHeader_extends.apply(this, arguments); }

function CardHeader_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = CardHeader_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function CardHeader_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function CardHeader(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = CardHeader_objectWithoutProperties(_ref, CardHeader_excluded);

  var classes = classnames_default()('card-header', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, CardHeader_extends({
    className: classes
  }, props), children);
}
CardHeader.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
CardHeader.defaultProps = {
  className: undefined,
  children: null,
  component: 'header'
};
// CONCATENATED MODULE: ./src/Card/CardHeader/index.js

// CONCATENATED MODULE: ./src/Card/CardHeaderIcon/CardHeaderIcon.js
var CardHeaderIcon_excluded = ["children", "className"];

function CardHeaderIcon_extends() { CardHeaderIcon_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return CardHeaderIcon_extends.apply(this, arguments); }

function CardHeaderIcon_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = CardHeaderIcon_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function CardHeaderIcon_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function CardHeaderIcon(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = CardHeaderIcon_objectWithoutProperties(_ref, CardHeaderIcon_excluded);

  var classes = classnames_default()('card-header-icon', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, CardHeaderIcon_extends({
    className: classes
  }, props), children);
}
CardHeaderIcon.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
CardHeaderIcon.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Card/CardHeaderIcon/index.js

// CONCATENATED MODULE: ./src/Card/CardHeaderTitle/CardHeaderTitle.js
var CardHeaderTitle_excluded = ["centered", "children", "className"];

function CardHeaderTitle_extends() { CardHeaderTitle_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return CardHeaderTitle_extends.apply(this, arguments); }

function CardHeaderTitle_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = CardHeaderTitle_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function CardHeaderTitle_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function CardHeaderTitle(_ref) {
  var centered = _ref.centered,
      children = _ref.children,
      className = _ref.className,
      props = CardHeaderTitle_objectWithoutProperties(_ref, CardHeaderTitle_excluded);

  var classes = classnames_default()('card-header-title', className, {
    'is-centered': centered
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, CardHeaderTitle_extends({
    className: classes
  }, props), children);
}
CardHeaderTitle.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  centered: external_prop_types_default.a.bool
};
CardHeaderTitle.defaultProps = {
  className: undefined,
  children: null,
  component: 'p',
  centered: false
};
// CONCATENATED MODULE: ./src/Card/CardHeaderTitle/index.js

// CONCATENATED MODULE: ./src/Card/CardImage/CardImage.js
var CardImage_excluded = ["children", "className"];

function CardImage_extends() { CardImage_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return CardImage_extends.apply(this, arguments); }

function CardImage_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = CardImage_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function CardImage_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function CardImage(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = CardImage_objectWithoutProperties(_ref, CardImage_excluded);

  var classes = classnames_default()('card-image', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, CardImage_extends({
    className: classes
  }, props), children);
}
CardImage.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
CardImage.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Card/CardImage/index.js

// CONCATENATED MODULE: ./src/Card/Card.js
var Card_excluded = ["children", "className"];

function Card_extends() { Card_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Card_extends.apply(this, arguments); }

function Card_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Card_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Card_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }












function Card(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = Card_objectWithoutProperties(_ref, Card_excluded);

  var classes = classnames_default()('card', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Card_extends({
    className: classes
  }, props), children);
}
Card.Content = CardContent;
Card.Footer = CardFooter;
Card.FooterItem = CardFooterItem;
Card.Header = CardHeader;
Card.HeaderIcon = CardHeaderIcon;
Card.HeaderTitle = CardHeaderTitle;
Card.Image = CardImage;
Card.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
Card.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Card/index.js

// CONCATENATED MODULE: ./src/Dropdown/DropdownContent/DropdownContent.js
var DropdownContent_excluded = ["children", "className"];

function DropdownContent_extends() { DropdownContent_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return DropdownContent_extends.apply(this, arguments); }

function DropdownContent_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = DropdownContent_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function DropdownContent_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function DropdownContent(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = DropdownContent_objectWithoutProperties(_ref, DropdownContent_excluded);

  var classes = classnames_default()('dropdown-content', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, DropdownContent_extends({
    className: classes
  }, props), children);
}
DropdownContent.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
DropdownContent.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Dropdown/DropdownContent/index.js

// CONCATENATED MODULE: ./src/Dropdown/DropdownDivider/DropdownDivider.js
var DropdownDivider_excluded = ["className"];

function DropdownDivider_extends() { DropdownDivider_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return DropdownDivider_extends.apply(this, arguments); }

function DropdownDivider_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = DropdownDivider_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function DropdownDivider_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function DropdownDivider(_ref) {
  var className = _ref.className,
      props = DropdownDivider_objectWithoutProperties(_ref, DropdownDivider_excluded);

  var classes = classnames_default()('dropdown-divider', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, DropdownDivider_extends({
    className: classes
  }, props));
}
DropdownDivider.propTypes = {
  className: external_prop_types_default.a.string,
  component: external_prop_types_default.a.elementType
};
DropdownDivider.defaultProps = {
  className: undefined,
  component: 'hr'
};
// CONCATENATED MODULE: ./src/Dropdown/DropdownDivider/index.js

// CONCATENATED MODULE: ./src/Dropdown/DropdownItem/DropdownItem.js
var DropdownItem_excluded = ["children", "className"];

function DropdownItem_extends() { DropdownItem_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return DropdownItem_extends.apply(this, arguments); }

function DropdownItem_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = DropdownItem_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function DropdownItem_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function DropdownItem(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = DropdownItem_objectWithoutProperties(_ref, DropdownItem_excluded);

  var classes = classnames_default()('dropdown-item', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, DropdownItem_extends({
    className: classes
  }, props), children);
}
DropdownItem.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
DropdownItem.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Dropdown/DropdownItem/index.js

// CONCATENATED MODULE: ./src/Dropdown/DropdownMenu/DropdownMenu.js
var DropdownMenu_excluded = ["children", "className"];

function DropdownMenu_extends() { DropdownMenu_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return DropdownMenu_extends.apply(this, arguments); }

function DropdownMenu_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = DropdownMenu_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function DropdownMenu_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function DropdownMenu(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = DropdownMenu_objectWithoutProperties(_ref, DropdownMenu_excluded);

  var classes = classnames_default()('dropdown-menu', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, DropdownMenu_extends({
    className: classes
  }, props), children);
}
DropdownMenu.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
DropdownMenu.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Dropdown/DropdownMenu/index.js

// CONCATENATED MODULE: ./src/Dropdown/DropdownTrigger/DropdownTrigger.js
var DropdownTrigger_excluded = ["children", "className"];

function DropdownTrigger_extends() { DropdownTrigger_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return DropdownTrigger_extends.apply(this, arguments); }

function DropdownTrigger_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = DropdownTrigger_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function DropdownTrigger_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function DropdownTrigger(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = DropdownTrigger_objectWithoutProperties(_ref, DropdownTrigger_excluded);

  var classes = classnames_default()('dropdown-trigger', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, DropdownTrigger_extends({
    className: classes
  }, props), children);
}
DropdownTrigger.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
DropdownTrigger.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Dropdown/DropdownTrigger/index.js

// CONCATENATED MODULE: ./src/Dropdown/Dropdown.js
var Dropdown_excluded = ["active", "children", "className", "hoverable", "right", "up"];

function Dropdown_extends() { Dropdown_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Dropdown_extends.apply(this, arguments); }

function Dropdown_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Dropdown_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Dropdown_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }










function Dropdown(_ref) {
  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      hoverable = _ref.hoverable,
      right = _ref.right,
      up = _ref.up,
      props = Dropdown_objectWithoutProperties(_ref, Dropdown_excluded);

  var classes = classnames_default()('dropdown', className, {
    'is-active': active,
    'is-hoverable': hoverable,
    'is-right': right,
    'is-up': up
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Dropdown_extends({
    className: classes
  }, props), children);
}
Dropdown.Content = DropdownContent;
Dropdown.Divider = DropdownDivider;
Dropdown.Item = DropdownItem;
Dropdown.Menu = DropdownMenu;
Dropdown.Trigger = DropdownTrigger;
Dropdown.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  active: external_prop_types_default.a.bool,
  hoverable: external_prop_types_default.a.bool,
  right: external_prop_types_default.a.bool,
  up: external_prop_types_default.a.bool
};
Dropdown.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  active: false,
  hoverable: false,
  right: false,
  up: false
};
// CONCATENATED MODULE: ./src/Dropdown/index.js

// CONCATENATED MODULE: ./src/Menu/MenuLabel/MenuLabel.js
var MenuLabel_excluded = ["children", "className"];

function MenuLabel_extends() { MenuLabel_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return MenuLabel_extends.apply(this, arguments); }

function MenuLabel_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = MenuLabel_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function MenuLabel_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function MenuLabel(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = MenuLabel_objectWithoutProperties(_ref, MenuLabel_excluded);

  var classes = classnames_default()('menu-label', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, MenuLabel_extends({
    className: classes
  }, props), children);
}
MenuLabel.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
MenuLabel.defaultProps = {
  className: undefined,
  children: null,
  component: 'p'
};
// CONCATENATED MODULE: ./src/Menu/MenuLabel/index.js

// CONCATENATED MODULE: ./src/Menu/MenuList/MenuList.js
var MenuList_excluded = ["children", "className"];

function MenuList_extends() { MenuList_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return MenuList_extends.apply(this, arguments); }

function MenuList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = MenuList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function MenuList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function MenuList(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = MenuList_objectWithoutProperties(_ref, MenuList_excluded);

  var classes = classnames_default()('menu-list', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, MenuList_extends({
    className: classes
  }, props), children);
}
MenuList.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
MenuList.defaultProps = {
  className: undefined,
  children: null,
  component: 'ul'
};
// CONCATENATED MODULE: ./src/Menu/MenuList/index.js

// CONCATENATED MODULE: ./src/Menu/MenuListItem/MenuListItem.js
var MenuListItem_excluded = ["children", "className"];

function MenuListItem_extends() { MenuListItem_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return MenuListItem_extends.apply(this, arguments); }

function MenuListItem_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = MenuListItem_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function MenuListItem_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




function MenuListItem(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = MenuListItem_objectWithoutProperties(_ref, MenuListItem_excluded);

  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, MenuListItem_extends({
    className: className
  }, props), children);
}
MenuListItem.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
MenuListItem.defaultProps = {
  className: undefined,
  children: null,
  component: 'li'
};
// CONCATENATED MODULE: ./src/Menu/MenuListItem/index.js

// CONCATENATED MODULE: ./src/Menu/MenuLink/MenuLink.js
var MenuLink_excluded = ["active", "children", "className"];

function MenuLink_extends() { MenuLink_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return MenuLink_extends.apply(this, arguments); }

function MenuLink_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = MenuLink_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function MenuLink_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function MenuLink(_ref) {
  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      props = MenuLink_objectWithoutProperties(_ref, MenuLink_excluded);

  var classes = classnames_default()(className, {
    'is-active': active
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, MenuLink_extends({
    className: classes
  }, props), children);
}
MenuLink.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  active: external_prop_types_default.a.bool
};
MenuLink.defaultProps = {
  className: undefined,
  children: null,
  component: 'a',
  active: false
};
// CONCATENATED MODULE: ./src/Menu/MenuLink/index.js

// CONCATENATED MODULE: ./src/Menu/Menu.js
var Menu_excluded = ["children", "className", "size"];

function Menu_extends() { Menu_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Menu_extends.apply(this, arguments); }

function Menu_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Menu_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Menu_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }









var Menu_sizes = ['small', 'medium', 'large'];
var Menu_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
function Menu(_ref) {
  var children = _ref.children,
      className = _ref.className,
      size = _ref.size,
      props = Menu_objectWithoutProperties(_ref, Menu_excluded);

  var isSize = size && Menu_sizeMap[size];
  var classes = classnames_default()('menu', className, isSize);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Menu_extends({
    className: classes
  }, props), children);
}
Menu.Label = MenuLabel;
Menu.List = MenuList;
Menu.ListItem = MenuListItem;
Menu.Link = MenuLink;
Menu.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(Menu_sizes)
};
Menu.defaultProps = {
  className: undefined,
  children: null,
  component: 'aside',
  size: undefined
};
// CONCATENATED MODULE: ./src/Menu/index.js

// CONCATENATED MODULE: ./src/Message/MessageBody/MessageBody.js
var MessageBody_excluded = ["children", "className"];

function MessageBody_extends() { MessageBody_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return MessageBody_extends.apply(this, arguments); }

function MessageBody_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = MessageBody_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function MessageBody_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function MessageBody(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = MessageBody_objectWithoutProperties(_ref, MessageBody_excluded);

  var classes = classnames_default()('message-body', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, MessageBody_extends({
    className: classes
  }, props), children);
}
MessageBody.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
MessageBody.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Message/MessageBody/index.js

// CONCATENATED MODULE: ./src/Message/MessageHeader/MessageHeader.js
var MessageHeader_excluded = ["children", "className"];

function MessageHeader_extends() { MessageHeader_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return MessageHeader_extends.apply(this, arguments); }

function MessageHeader_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = MessageHeader_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function MessageHeader_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function MessageHeader(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = MessageHeader_objectWithoutProperties(_ref, MessageHeader_excluded);

  var classes = classnames_default()('message-header', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, MessageHeader_extends({
    className: classes
  }, props), children);
}
MessageHeader.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
MessageHeader.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Message/MessageHeader/index.js

// CONCATENATED MODULE: ./src/Message/Message.js
var Message_excluded = ["children", "className", "color", "size"];

function Message_extends() { Message_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Message_extends.apply(this, arguments); }

function Message_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Message_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Message_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }







var Message_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var Message_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
var Message_sizes = ['small', 'medium', 'large'];
var Message_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
function Message(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      size = _ref.size,
      props = Message_objectWithoutProperties(_ref, Message_excluded);

  var isColor = color && Message_colorMap[color];
  var isSize = size && Message_sizeMap[size];
  var classes = classnames_default()('message', className, isColor, isSize);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Message_extends({
    className: classes
  }, props), children);
}
Message.Body = MessageBody;
Message.Header = MessageHeader;
Message.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(Message_colors),
  size: external_prop_types_default.a.oneOf(Message_sizes)
};
Message.defaultProps = {
  className: undefined,
  children: null,
  component: 'article',
  color: undefined,
  size: undefined
};
// CONCATENATED MODULE: ./src/Message/index.js

// CONCATENATED MODULE: ./src/Modal/ModalBackground/ModalBackground.js
var ModalBackground_excluded = ["children", "className"];

function ModalBackground_extends() { ModalBackground_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ModalBackground_extends.apply(this, arguments); }

function ModalBackground_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ModalBackground_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function ModalBackground_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function ModalBackground(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = ModalBackground_objectWithoutProperties(_ref, ModalBackground_excluded);

  var classes = classnames_default()('modal-background', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, ModalBackground_extends({
    className: classes
  }, props), children);
}
ModalBackground.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
ModalBackground.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Modal/ModalBackground/index.js

// CONCATENATED MODULE: ./src/Modal/ModalCard/ModalCard.js
var ModalCard_excluded = ["children", "className"];

function ModalCard_extends() { ModalCard_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ModalCard_extends.apply(this, arguments); }

function ModalCard_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ModalCard_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function ModalCard_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function ModalCard(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = ModalCard_objectWithoutProperties(_ref, ModalCard_excluded);

  var classes = classnames_default()('modal-card', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, ModalCard_extends({
    className: classes
  }, props), children);
}
ModalCard.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
ModalCard.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Modal/ModalCard/index.js

// CONCATENATED MODULE: ./src/Modal/ModalCardBody/ModalCardBody.js
var ModalCardBody_excluded = ["children", "className"];

function ModalCardBody_extends() { ModalCardBody_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ModalCardBody_extends.apply(this, arguments); }

function ModalCardBody_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ModalCardBody_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function ModalCardBody_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function ModalCardBody(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = ModalCardBody_objectWithoutProperties(_ref, ModalCardBody_excluded);

  var classes = classnames_default()('modal-card-body', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, ModalCardBody_extends({
    className: classes
  }, props), children);
}
ModalCardBody.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
ModalCardBody.defaultProps = {
  className: undefined,
  children: null,
  component: 'section'
};
// CONCATENATED MODULE: ./src/Modal/ModalCardBody/index.js

// CONCATENATED MODULE: ./src/Modal/ModalCardFoot/ModalCardFoot.js
var ModalCardFoot_excluded = ["children", "className"];

function ModalCardFoot_extends() { ModalCardFoot_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ModalCardFoot_extends.apply(this, arguments); }

function ModalCardFoot_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ModalCardFoot_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function ModalCardFoot_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function ModalCardFoot(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = ModalCardFoot_objectWithoutProperties(_ref, ModalCardFoot_excluded);

  var classes = classnames_default()('modal-card-foot', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, ModalCardFoot_extends({
    className: classes
  }, props), children);
}
ModalCardFoot.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
ModalCardFoot.defaultProps = {
  className: undefined,
  children: null,
  component: 'footer'
};
// CONCATENATED MODULE: ./src/Modal/ModalCardFoot/index.js

// CONCATENATED MODULE: ./src/Modal/ModalCardHead/ModalCardHead.js
var ModalCardHead_excluded = ["children", "className"];

function ModalCardHead_extends() { ModalCardHead_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ModalCardHead_extends.apply(this, arguments); }

function ModalCardHead_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ModalCardHead_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function ModalCardHead_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function ModalCardHead(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = ModalCardHead_objectWithoutProperties(_ref, ModalCardHead_excluded);

  var classes = classnames_default()('modal-card-head', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, ModalCardHead_extends({
    className: classes
  }, props), children);
}
ModalCardHead.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
ModalCardHead.defaultProps = {
  className: undefined,
  children: null,
  component: 'header'
};
// CONCATENATED MODULE: ./src/Modal/ModalCardHead/index.js

// CONCATENATED MODULE: ./src/Modal/ModalCardTitle/ModalCardTitle.js
var ModalCardTitle_excluded = ["children", "className"];

function ModalCardTitle_extends() { ModalCardTitle_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ModalCardTitle_extends.apply(this, arguments); }

function ModalCardTitle_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ModalCardTitle_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function ModalCardTitle_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function ModalCardTitle(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = ModalCardTitle_objectWithoutProperties(_ref, ModalCardTitle_excluded);

  var classes = classnames_default()('modal-card-title', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, ModalCardTitle_extends({
    className: classes
  }, props), children);
}
ModalCardTitle.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
ModalCardTitle.defaultProps = {
  className: undefined,
  children: null,
  component: 'p'
};
// CONCATENATED MODULE: ./src/Modal/ModalCardTitle/index.js

// CONCATENATED MODULE: ./src/Modal/ModalClose/ModalClose.js
var ModalClose_excluded = ["className", "size"];

function ModalClose_extends() { ModalClose_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ModalClose_extends.apply(this, arguments); }

function ModalClose_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ModalClose_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function ModalClose_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var ModalClose_sizes = ['small', 'medium', 'large'];
var ModalClose_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
function ModalClose(_ref) {
  var className = _ref.className,
      size = _ref.size,
      props = ModalClose_objectWithoutProperties(_ref, ModalClose_excluded);

  var isSize = size && ModalClose_sizeMap[size];
  var classes = classnames_default()('modal-close', className, isSize);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, ModalClose_extends({
    type: "button",
    className: classes
  }, props));
}
ModalClose.propTypes = {
  className: external_prop_types_default.a.string,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(ModalClose_sizes)
};
ModalClose.defaultProps = {
  className: undefined,
  component: 'button',
  size: undefined
};
// CONCATENATED MODULE: ./src/Modal/ModalClose/index.js

// CONCATENATED MODULE: ./src/Modal/ModalContent/ModalContent.js
var ModalContent_excluded = ["children", "className"];

function ModalContent_extends() { ModalContent_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ModalContent_extends.apply(this, arguments); }

function ModalContent_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ModalContent_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function ModalContent_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function ModalContent(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = ModalContent_objectWithoutProperties(_ref, ModalContent_excluded);

  var classes = classnames_default()('modal-content', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, ModalContent_extends({
    className: classes
  }, props), children);
}
ModalContent.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
ModalContent.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Modal/ModalContent/index.js

// CONCATENATED MODULE: ./src/Modal/Modal.js
var Modal_excluded = ["active", "children", "className"];

function Modal_extends() { Modal_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Modal_extends.apply(this, arguments); }

function Modal_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Modal_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Modal_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }













function Modal(_ref) {
  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      props = Modal_objectWithoutProperties(_ref, Modal_excluded);

  var classes = classnames_default()('modal', className, {
    'is-active': active
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Modal_extends({
    className: classes
  }, props), children);
}
Modal.Background = ModalBackground;
Modal.Card = ModalCard;
Modal.CardBody = ModalCardBody;
Modal.CardFoot = ModalCardFoot;
Modal.CardHead = ModalCardHead;
Modal.CardTitle = ModalCardTitle;
Modal.Close = ModalClose;
Modal.Content = ModalContent;
Modal.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  active: external_prop_types_default.a.bool
};
Modal.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  active: false
};
// CONCATENATED MODULE: ./src/Modal/index.js

// CONCATENATED MODULE: ./src/Navbar/NavbarBrand/NavbarBrand.js
var NavbarBrand_excluded = ["children", "className"];

function NavbarBrand_extends() { NavbarBrand_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return NavbarBrand_extends.apply(this, arguments); }

function NavbarBrand_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = NavbarBrand_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function NavbarBrand_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function NavbarBrand(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = NavbarBrand_objectWithoutProperties(_ref, NavbarBrand_excluded);

  var classes = classnames_default()('navbar-brand', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, NavbarBrand_extends({
    className: classes
  }, props), children);
}
NavbarBrand.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
NavbarBrand.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Navbar/NavbarBrand/index.js

// CONCATENATED MODULE: ./src/Navbar/NavbarBurger/NavbarBurger.js
var NavbarBurger_excluded = ["className", "active"];

function NavbarBurger_extends() { NavbarBurger_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return NavbarBurger_extends.apply(this, arguments); }

function NavbarBurger_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = NavbarBurger_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function NavbarBurger_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function NavbarBurger(_ref) {
  var className = _ref.className,
      active = _ref.active,
      props = NavbarBurger_objectWithoutProperties(_ref, NavbarBurger_excluded);

  var classes = classnames_default()('navbar-burger', className, {
    'is-active': active
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, NavbarBurger_extends({
    role: "button",
    className: classes
  }, props), /*#__PURE__*/external_react_default.a.createElement("span", {
    "aria-hidden": "true"
  }), /*#__PURE__*/external_react_default.a.createElement("span", {
    "aria-hidden": "true"
  }), /*#__PURE__*/external_react_default.a.createElement("span", {
    "aria-hidden": "true"
  }));
}
NavbarBurger.propTypes = {
  className: external_prop_types_default.a.string,
  component: external_prop_types_default.a.elementType,
  active: external_prop_types_default.a.bool
};
NavbarBurger.defaultProps = {
  className: undefined,
  component: 'a',
  active: false
};
// CONCATENATED MODULE: ./src/Navbar/NavbarBurger/index.js

// CONCATENATED MODULE: ./src/Navbar/NavbarDivider/NavbarDivider.js
var NavbarDivider_excluded = ["className"];

function NavbarDivider_extends() { NavbarDivider_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return NavbarDivider_extends.apply(this, arguments); }

function NavbarDivider_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = NavbarDivider_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function NavbarDivider_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function NavbarDivider(_ref) {
  var className = _ref.className,
      props = NavbarDivider_objectWithoutProperties(_ref, NavbarDivider_excluded);

  var classes = classnames_default()('navbar-divider', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, NavbarDivider_extends({
    className: classes
  }, props));
}
NavbarDivider.propTypes = {
  className: external_prop_types_default.a.string,
  component: external_prop_types_default.a.elementType
};
NavbarDivider.defaultProps = {
  className: undefined,
  component: 'hr'
};
// CONCATENATED MODULE: ./src/Navbar/NavbarDivider/index.js

// CONCATENATED MODULE: ./src/Navbar/NavbarDropdown/NavbarDropdown.js
var NavbarDropdown_excluded = ["children", "className", "boxed", "right"];

function NavbarDropdown_extends() { NavbarDropdown_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return NavbarDropdown_extends.apply(this, arguments); }

function NavbarDropdown_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = NavbarDropdown_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function NavbarDropdown_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function NavbarDropdown(_ref) {
  var children = _ref.children,
      className = _ref.className,
      boxed = _ref.boxed,
      right = _ref.right,
      props = NavbarDropdown_objectWithoutProperties(_ref, NavbarDropdown_excluded);

  var classes = classnames_default()('navbar-dropdown', className, {
    'is-right': right,
    'is-boxed': boxed
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, NavbarDropdown_extends({
    className: classes
  }, props), children);
}
NavbarDropdown.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  right: external_prop_types_default.a.bool,
  boxed: external_prop_types_default.a.bool
};
NavbarDropdown.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  right: undefined,
  boxed: false
};
// CONCATENATED MODULE: ./src/Navbar/NavbarDropdown/index.js

// CONCATENATED MODULE: ./src/Navbar/NavbarEnd/NavbarEnd.js
var NavbarEnd_excluded = ["children", "className"];

function NavbarEnd_extends() { NavbarEnd_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return NavbarEnd_extends.apply(this, arguments); }

function NavbarEnd_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = NavbarEnd_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function NavbarEnd_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function NavbarEnd(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = NavbarEnd_objectWithoutProperties(_ref, NavbarEnd_excluded);

  var classes = classnames_default()('navbar-end', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, NavbarEnd_extends({
    className: classes
  }, props), children);
}
NavbarEnd.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
NavbarEnd.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Navbar/NavbarEnd/index.js

// CONCATENATED MODULE: ./src/Navbar/NavbarItem/NavbarItem.js
var NavbarItem_excluded = ["children", "className", "active", "expanded", "hasDropdown", "hasDropup", "hoverable", "tab"];

function NavbarItem_extends() { NavbarItem_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return NavbarItem_extends.apply(this, arguments); }

function NavbarItem_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = NavbarItem_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function NavbarItem_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function NavbarItem(_ref) {
  var children = _ref.children,
      className = _ref.className,
      active = _ref.active,
      expanded = _ref.expanded,
      hasDropdown = _ref.hasDropdown,
      hasDropup = _ref.hasDropup,
      hoverable = _ref.hoverable,
      tab = _ref.tab,
      props = NavbarItem_objectWithoutProperties(_ref, NavbarItem_excluded);

  var classes = classnames_default()('navbar-item', className, {
    'is-active': active,
    'has-dropdown': hasDropdown || hasDropup,
    'has-dropdown-up': hasDropup,
    'is-hoverable': hoverable,
    'is-expanded': expanded,
    'is-tab': tab
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, NavbarItem_extends({
    className: classes
  }, props), children);
}
NavbarItem.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  active: external_prop_types_default.a.bool,
  hasDropdown: external_prop_types_default.a.bool,
  hasDropup: external_prop_types_default.a.bool,
  hoverable: external_prop_types_default.a.bool,
  expanded: external_prop_types_default.a.bool,
  tab: external_prop_types_default.a.bool
};
NavbarItem.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  active: false,
  hasDropdown: false,
  hasDropup: false,
  hoverable: false,
  expanded: false,
  tab: false
};
// CONCATENATED MODULE: ./src/Navbar/NavbarItem/index.js

// CONCATENATED MODULE: ./src/Navbar/NavbarLink/NavbarLink.js
var NavbarLink_excluded = ["arrowless", "children", "className"];

function NavbarLink_extends() { NavbarLink_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return NavbarLink_extends.apply(this, arguments); }

function NavbarLink_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = NavbarLink_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function NavbarLink_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function NavbarLink(_ref) {
  var arrowless = _ref.arrowless,
      children = _ref.children,
      className = _ref.className,
      props = NavbarLink_objectWithoutProperties(_ref, NavbarLink_excluded);

  var classes = classnames_default()('navbar-link', className, {
    'is-arrowless': arrowless
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, NavbarLink_extends({
    className: classes
  }, props), children);
}
NavbarLink.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  arrowless: external_prop_types_default.a.bool
};
NavbarLink.defaultProps = {
  className: undefined,
  children: null,
  component: 'a',
  arrowless: false
};
// CONCATENATED MODULE: ./src/Navbar/NavbarLink/index.js

// CONCATENATED MODULE: ./src/Navbar/NavbarMenu/NavbarMenu.js
var NavbarMenu_excluded = ["active", "children", "className"];

function NavbarMenu_extends() { NavbarMenu_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return NavbarMenu_extends.apply(this, arguments); }

function NavbarMenu_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = NavbarMenu_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function NavbarMenu_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function NavbarMenu(_ref) {
  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      props = NavbarMenu_objectWithoutProperties(_ref, NavbarMenu_excluded);

  var classes = classnames_default()('navbar-menu', className, {
    'is-active': active
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, NavbarMenu_extends({
    className: classes
  }, props), children);
}
NavbarMenu.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  active: external_prop_types_default.a.bool
};
NavbarMenu.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  active: false
};
// CONCATENATED MODULE: ./src/Navbar/NavbarMenu/index.js

// CONCATENATED MODULE: ./src/Navbar/NavbarStart/NavbarStart.js
var NavbarStart_excluded = ["children", "className"];

function NavbarStart_extends() { NavbarStart_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return NavbarStart_extends.apply(this, arguments); }

function NavbarStart_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = NavbarStart_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function NavbarStart_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function NavbarStart(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = NavbarStart_objectWithoutProperties(_ref, NavbarStart_excluded);

  var classes = classnames_default()('navbar-start', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, NavbarStart_extends({
    className: classes
  }, props), children);
}
NavbarStart.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
NavbarStart.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Navbar/NavbarStart/index.js

// CONCATENATED MODULE: ./src/Navbar/Navbar.js
var Navbar_excluded = ["children", "className", "color", "fixed", "shadow", "spaced", "transparent"];

function Navbar_extends() { Navbar_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Navbar_extends.apply(this, arguments); }

function Navbar_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Navbar_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Navbar_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }














var Navbar_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var Navbar_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
var fixedDirections = ['top', 'bottom', 'top-desktop', 'bottom-desktop', 'top-touch', 'bottom-touch'];
var fixedMap = {};
fixedDirections.forEach(function (direction) {
  fixedMap[direction] = "is-fixed-".concat(direction);
});
function Navbar(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      fixed = _ref.fixed,
      shadow = _ref.shadow,
      spaced = _ref.spaced,
      transparent = _ref.transparent,
      props = Navbar_objectWithoutProperties(_ref, Navbar_excluded);

  var isColor = color && Navbar_colorMap[color];
  var isFixed = fixed && fixedMap[fixed];
  var classes = classnames_default()('navbar', className, isColor, isFixed, {
    'is-transparent': transparent,
    'is-spaced': spaced,
    'has-shadow': shadow
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Navbar_extends({
    role: "navigation",
    className: classes
  }, props), children);
}
Navbar.Brand = NavbarBrand;
Navbar.Burger = NavbarBurger;
Navbar.Divider = NavbarDivider;
Navbar.Dropdown = NavbarDropdown;
Navbar.End = NavbarEnd;
Navbar.Item = NavbarItem;
Navbar.Link = NavbarLink;
Navbar.Menu = NavbarMenu;
Navbar.Start = NavbarStart;
Navbar.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(Navbar_colors),
  fixed: external_prop_types_default.a.oneOf(fixedDirections),
  shadow: external_prop_types_default.a.bool,
  transparent: external_prop_types_default.a.bool,
  spaced: external_prop_types_default.a.bool
};
Navbar.defaultProps = {
  className: undefined,
  children: null,
  component: 'nav',
  color: undefined,
  fixed: undefined,
  shadow: false,
  transparent: false,
  spaced: false
};
// CONCATENATED MODULE: ./src/Navbar/index.js

// CONCATENATED MODULE: ./src/Pagination/PaginationEllipsis/PaginationEllipsis.js
var PaginationEllipsis_excluded = ["children", "className"];

function PaginationEllipsis_extends() { PaginationEllipsis_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PaginationEllipsis_extends.apply(this, arguments); }

function PaginationEllipsis_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PaginationEllipsis_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function PaginationEllipsis_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function PaginationEllipsis(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = PaginationEllipsis_objectWithoutProperties(_ref, PaginationEllipsis_excluded);

  var classes = classnames_default()('pagination-ellipsis', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, PaginationEllipsis_extends({
    className: classes
  }, props), children);
}
PaginationEllipsis.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
PaginationEllipsis.defaultProps = {
  className: undefined,
  children: null,
  component: 'span'
};
// CONCATENATED MODULE: ./src/Pagination/PaginationEllipsis/index.js

// CONCATENATED MODULE: ./src/Pagination/PaginationLink/PaginationLink.js
var PaginationLink_excluded = ["children", "className", "current"];

function PaginationLink_extends() { PaginationLink_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PaginationLink_extends.apply(this, arguments); }

function PaginationLink_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PaginationLink_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function PaginationLink_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function PaginationLink(_ref) {
  var children = _ref.children,
      className = _ref.className,
      current = _ref.current,
      props = PaginationLink_objectWithoutProperties(_ref, PaginationLink_excluded);

  var classes = classnames_default()('pagination-link', className, {
    'is-current': current
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, PaginationLink_extends({
    className: classes
  }, props), children);
}
PaginationLink.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  current: external_prop_types_default.a.bool,
  disabled: external_prop_types_default.a.bool
};
PaginationLink.defaultProps = {
  className: undefined,
  children: null,
  component: 'a',
  current: false,
  disabled: false
};
// CONCATENATED MODULE: ./src/Pagination/PaginationLink/index.js

// CONCATENATED MODULE: ./src/Pagination/PaginationList/PaginationList.js
var PaginationList_excluded = ["children", "className"];

function PaginationList_extends() { PaginationList_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PaginationList_extends.apply(this, arguments); }

function PaginationList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PaginationList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function PaginationList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function PaginationList(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = PaginationList_objectWithoutProperties(_ref, PaginationList_excluded);

  var classes = classnames_default()('pagination-list', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, PaginationList_extends({
    className: classes
  }, props), children);
}
PaginationList.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
PaginationList.defaultProps = {
  className: undefined,
  children: null,
  component: 'ul'
};
// CONCATENATED MODULE: ./src/Pagination/PaginationList/index.js

// CONCATENATED MODULE: ./src/Pagination/PaginationListItem/PaginationListItem.js
var PaginationListItem_excluded = ["children", "className"];

function PaginationListItem_extends() { PaginationListItem_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PaginationListItem_extends.apply(this, arguments); }

function PaginationListItem_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PaginationListItem_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function PaginationListItem_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




function PaginationListItem(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = PaginationListItem_objectWithoutProperties(_ref, PaginationListItem_excluded);

  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, PaginationListItem_extends({
    className: className
  }, props), children);
}
PaginationListItem.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
PaginationListItem.defaultProps = {
  className: undefined,
  children: null,
  component: 'li'
};
// CONCATENATED MODULE: ./src/Pagination/PaginationListItem/index.js

// CONCATENATED MODULE: ./src/Pagination/PaginationNext/PaginationNext.js
var PaginationNext_excluded = ["children", "className"];

function PaginationNext_extends() { PaginationNext_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PaginationNext_extends.apply(this, arguments); }

function PaginationNext_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PaginationNext_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function PaginationNext_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function PaginationNext(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = PaginationNext_objectWithoutProperties(_ref, PaginationNext_excluded);

  var classes = classnames_default()('pagination-next', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, PaginationNext_extends({
    className: classes
  }, props), children);
}
PaginationNext.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  disabled: external_prop_types_default.a.bool
};
PaginationNext.defaultProps = {
  className: undefined,
  children: null,
  component: 'a',
  disabled: false
};
// CONCATENATED MODULE: ./src/Pagination/PaginationNext/index.js

// CONCATENATED MODULE: ./src/Pagination/PaginationPrevious/PaginationPrevious.js
var PaginationPrevious_excluded = ["children", "className"];

function PaginationPrevious_extends() { PaginationPrevious_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PaginationPrevious_extends.apply(this, arguments); }

function PaginationPrevious_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PaginationPrevious_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function PaginationPrevious_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function PaginationPrevious(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = PaginationPrevious_objectWithoutProperties(_ref, PaginationPrevious_excluded);

  var classes = classnames_default()('pagination-previous', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, PaginationPrevious_extends({
    className: classes
  }, props), children);
}
PaginationPrevious.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  disabled: external_prop_types_default.a.bool
};
PaginationPrevious.defaultProps = {
  className: undefined,
  children: null,
  component: 'a',
  disabled: false
};
// CONCATENATED MODULE: ./src/Pagination/PaginationPrevious/index.js

// CONCATENATED MODULE: ./src/Pagination/Pagination.js
var Pagination_excluded = ["align", "children", "className", "rounded", "size"];

function Pagination_extends() { Pagination_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Pagination_extends.apply(this, arguments); }

function Pagination_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Pagination_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Pagination_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }











var Pagination_sizes = ['small', 'medium', 'large'];
var Pagination_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
var Pagination_aligns = ['center', 'right'];
var Pagination_alignMap = {
  center: 'is-centered',
  right: 'is-right'
};
function Pagination(_ref) {
  var align = _ref.align,
      children = _ref.children,
      className = _ref.className,
      rounded = _ref.rounded,
      size = _ref.size,
      props = Pagination_objectWithoutProperties(_ref, Pagination_excluded);

  var isSize = size && Pagination_sizeMap[size];
  var isAlign = align && Pagination_alignMap[align];
  var classes = classnames_default()('pagination', className, isSize, isAlign, {
    'is-rounded': rounded
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Pagination_extends({
    role: "navigation",
    className: classes
  }, props), children);
}
Pagination.Ellipsis = PaginationEllipsis;
Pagination.Link = PaginationLink;
Pagination.List = PaginationList;
Pagination.ListItem = PaginationListItem;
Pagination.Next = PaginationNext;
Pagination.Previous = PaginationPrevious;
Pagination.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(Pagination_sizes),
  align: external_prop_types_default.a.oneOf(Pagination_aligns),
  rounded: external_prop_types_default.a.bool
};
Pagination.defaultProps = {
  className: undefined,
  children: null,
  component: 'nav',
  size: undefined,
  align: undefined,
  rounded: false
};
// CONCATENATED MODULE: ./src/Pagination/index.js

// CONCATENATED MODULE: ./src/Panel/PanelBlock/PanelBlock.js
var PanelBlock_excluded = ["active", "children", "className", "wrapped"];

function PanelBlock_extends() { PanelBlock_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PanelBlock_extends.apply(this, arguments); }

function PanelBlock_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PanelBlock_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function PanelBlock_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function PanelBlock(_ref) {
  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      wrapped = _ref.wrapped,
      props = PanelBlock_objectWithoutProperties(_ref, PanelBlock_excluded);

  var classes = classnames_default()('panel-block', className, {
    'is-active': active,
    'is-wrapped': wrapped
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, PanelBlock_extends({
    className: classes
  }, props), children);
}
PanelBlock.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  active: external_prop_types_default.a.bool,
  wrapped: external_prop_types_default.a.bool
};
PanelBlock.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  active: false,
  wrapped: false
};
// CONCATENATED MODULE: ./src/Panel/PanelBlock/index.js

// CONCATENATED MODULE: ./src/Panel/PanelHeading/PanelHeading.js
var PanelHeading_excluded = ["children", "className"];

function PanelHeading_extends() { PanelHeading_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PanelHeading_extends.apply(this, arguments); }

function PanelHeading_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PanelHeading_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function PanelHeading_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function PanelHeading(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = PanelHeading_objectWithoutProperties(_ref, PanelHeading_excluded);

  var classes = classnames_default()('panel-heading', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, PanelHeading_extends({
    className: classes
  }, props), children);
}
PanelHeading.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
PanelHeading.defaultProps = {
  className: undefined,
  children: null,
  component: 'p'
};
// CONCATENATED MODULE: ./src/Panel/PanelHeading/index.js

// CONCATENATED MODULE: ./src/Panel/PanelIcon/PanelIcon.js
var PanelIcon_excluded = ["children", "className"];

function PanelIcon_extends() { PanelIcon_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PanelIcon_extends.apply(this, arguments); }

function PanelIcon_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PanelIcon_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function PanelIcon_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function PanelIcon(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = PanelIcon_objectWithoutProperties(_ref, PanelIcon_excluded);

  var classes = classnames_default()('panel-icon', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, PanelIcon_extends({
    className: classes
  }, props), children);
}
PanelIcon.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
PanelIcon.defaultProps = {
  className: undefined,
  children: null,
  component: 'span'
};
// CONCATENATED MODULE: ./src/Panel/PanelIcon/index.js

// CONCATENATED MODULE: ./src/Panel/PanelTab/PanelTab.js
var PanelTab_excluded = ["active", "children", "className"];

function PanelTab_extends() { PanelTab_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PanelTab_extends.apply(this, arguments); }

function PanelTab_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PanelTab_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function PanelTab_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function PanelTab(_ref) {
  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      props = PanelTab_objectWithoutProperties(_ref, PanelTab_excluded);

  var classes = classnames_default()(className, {
    'is-active': active
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, PanelTab_extends({
    className: classes
  }, props), children);
}
PanelTab.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  active: external_prop_types_default.a.bool
};
PanelTab.defaultProps = {
  className: undefined,
  children: null,
  component: 'a',
  active: false
};
// CONCATENATED MODULE: ./src/Panel/PanelTab/index.js

// CONCATENATED MODULE: ./src/Panel/PanelTabs/PanelTabs.js
var PanelTabs_excluded = ["children", "className"];

function PanelTabs_extends() { PanelTabs_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return PanelTabs_extends.apply(this, arguments); }

function PanelTabs_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = PanelTabs_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function PanelTabs_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function PanelTabs(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = PanelTabs_objectWithoutProperties(_ref, PanelTabs_excluded);

  var classes = classnames_default()('panel-tabs', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, PanelTabs_extends({
    className: classes
  }, props), children);
}
PanelTabs.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
PanelTabs.defaultProps = {
  className: undefined,
  children: null,
  component: 'p'
};
// CONCATENATED MODULE: ./src/Panel/PanelTabs/index.js

// CONCATENATED MODULE: ./src/Panel/Panel.js
var Panel_excluded = ["children", "className", "color"];

function Panel_extends() { Panel_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Panel_extends.apply(this, arguments); }

function Panel_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Panel_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Panel_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }










var Panel_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var Panel_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
function Panel(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      props = Panel_objectWithoutProperties(_ref, Panel_excluded);

  var isColor = color && Panel_colorMap[color];
  var classes = classnames_default()('panel', className, isColor);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Panel_extends({
    className: classes
  }, props), children);
}
Panel.Block = PanelBlock;
Panel.Heading = PanelHeading;
Panel.Icon = PanelIcon;
Panel.Tab = PanelTab;
Panel.Tabs = PanelTabs;
Panel.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(Panel_colors)
};
Panel.defaultProps = {
  className: undefined,
  children: null,
  component: 'nav',
  color: undefined
};
// CONCATENATED MODULE: ./src/Panel/index.js

// CONCATENATED MODULE: ./src/Tabs/TabsList/TabsList.js
var TabsList_excluded = ["children", "className"];

function TabsList_extends() { TabsList_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return TabsList_extends.apply(this, arguments); }

function TabsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = TabsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function TabsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




function TabsList(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = TabsList_objectWithoutProperties(_ref, TabsList_excluded);

  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, TabsList_extends({
    className: className
  }, props), children);
}
TabsList.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
TabsList.defaultProps = {
  className: undefined,
  children: null,
  component: 'ul'
};
// CONCATENATED MODULE: ./src/Tabs/TabsList/index.js

// CONCATENATED MODULE: ./src/Tabs/TabsListItem/TabsListItem.js
var TabsListItem_excluded = ["active", "children", "className"];

function TabsListItem_extends() { TabsListItem_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return TabsListItem_extends.apply(this, arguments); }

function TabsListItem_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = TabsListItem_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function TabsListItem_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function TabsListItem(_ref) {
  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      props = TabsListItem_objectWithoutProperties(_ref, TabsListItem_excluded);

  var classes = classnames_default()(className, {
    'is-active': active
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, TabsListItem_extends({
    className: classes
  }, props), children);
}
TabsListItem.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  active: external_prop_types_default.a.bool
};
TabsListItem.defaultProps = {
  className: undefined,
  children: null,
  component: 'li',
  active: false
};
// CONCATENATED MODULE: ./src/Tabs/TabsListItem/index.js

// CONCATENATED MODULE: ./src/Tabs/TabsLink/TabsLink.js
var TabsLink_excluded = ["children", "className"];

function TabsLink_extends() { TabsLink_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return TabsLink_extends.apply(this, arguments); }

function TabsLink_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = TabsLink_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function TabsLink_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




function TabsLink(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = TabsLink_objectWithoutProperties(_ref, TabsLink_excluded);

  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, TabsLink_extends({
    className: className
  }, props), children);
}
TabsLink.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
TabsLink.defaultProps = {
  className: undefined,
  children: null,
  component: 'a'
};
// CONCATENATED MODULE: ./src/Tabs/TabsLink/index.js

// CONCATENATED MODULE: ./src/Tabs/Tabs.js
var Tabs_excluded = ["align", "boxed", "children", "className", "fullwidth", "rounded", "size", "toggle"];

function Tabs_extends() { Tabs_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Tabs_extends.apply(this, arguments); }

function Tabs_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Tabs_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Tabs_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }








var Tabs_sizes = ['small', 'medium', 'large'];
var Tabs_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
var Tabs_aligns = ['center', 'right'];
var Tabs_alignMap = {
  center: 'is-centered',
  right: 'is-right'
};
function Tabs(_ref) {
  var align = _ref.align,
      boxed = _ref.boxed,
      children = _ref.children,
      className = _ref.className,
      fullwidth = _ref.fullwidth,
      rounded = _ref.rounded,
      size = _ref.size,
      toggle = _ref.toggle,
      props = Tabs_objectWithoutProperties(_ref, Tabs_excluded);

  var isSize = size && Tabs_sizeMap[size];
  var isAlign = align && Tabs_alignMap[align];
  var classes = classnames_default()('tabs', className, isSize, isAlign, {
    'is-boxed': boxed,
    'is-fullwidth': fullwidth,
    'is-toggle': toggle,
    'is-toggle-rounded': toggle && rounded
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Tabs_extends({
    className: classes
  }, props), children);
}
Tabs.List = TabsList;
Tabs.ListItem = TabsListItem;
Tabs.Link = TabsLink;
Tabs.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(Tabs_sizes),
  align: external_prop_types_default.a.oneOf(Tabs_aligns),
  boxed: external_prop_types_default.a.bool,
  fullwidth: external_prop_types_default.a.bool,
  toggle: external_prop_types_default.a.bool,

  /**
   * Use with toggle to create rounded toggle tabs
   */
  rounded: external_prop_types_default.a.bool
};
Tabs.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  size: undefined,
  align: undefined,
  boxed: false,
  fullwidth: false,
  toggle: false,
  rounded: false
};
// CONCATENATED MODULE: ./src/Tabs/index.js

// CONCATENATED MODULE: ./src/Checkbox/Checkbox.js
var Checkbox_excluded = ["children", "className"];

function Checkbox_extends() { Checkbox_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Checkbox_extends.apply(this, arguments); }

function Checkbox_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Checkbox_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Checkbox_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function Checkbox_Block(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = Checkbox_objectWithoutProperties(_ref, Checkbox_excluded);

  var classes = classnames_default()('checkbox', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Checkbox_extends({
    className: classes
  }, props), children);
}
Checkbox_Block.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  disabled: external_prop_types_default.a.bool
};
Checkbox_Block.defaultProps = {
  className: undefined,
  children: null,
  component: 'label',
  disabled: false
};
// CONCATENATED MODULE: ./src/Checkbox/index.js

// CONCATENATED MODULE: ./src/Control/Control.js
var Control_excluded = ["children", "className", "expanded", "iconsLeft", "iconsRight", "loading", "size"];

function Control_extends() { Control_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Control_extends.apply(this, arguments); }

function Control_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Control_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Control_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Control_sizes = ['small', 'medium', 'large'];
var Control_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
function Control(_ref) {
  var children = _ref.children,
      className = _ref.className,
      expanded = _ref.expanded,
      iconsLeft = _ref.iconsLeft,
      iconsRight = _ref.iconsRight,
      loading = _ref.loading,
      size = _ref.size,
      props = Control_objectWithoutProperties(_ref, Control_excluded);

  var isSize = size && Control_sizeMap[size];
  var classes = classnames_default()('control', className, isSize, {
    'has-icons-left': iconsLeft,
    'has-icons-right': iconsRight,
    'is-expanded': expanded,
    'is-loading': loading
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Control_extends({
    className: classes
  }, props), children);
}
Control.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  iconsLeft: external_prop_types_default.a.bool,
  iconsRight: external_prop_types_default.a.bool,
  expanded: external_prop_types_default.a.bool,
  loading: external_prop_types_default.a.bool,
  size: external_prop_types_default.a.oneOf(Control_sizes)
};
Control.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  iconsLeft: false,
  iconsRight: false,
  expanded: false,
  loading: false,
  size: undefined
};
// CONCATENATED MODULE: ./src/Control/index.js

// CONCATENATED MODULE: ./src/Field/FieldLabel/FieldLabel.js
var FieldLabel_excluded = ["children", "className", "size"];

function FieldLabel_extends() { FieldLabel_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return FieldLabel_extends.apply(this, arguments); }

function FieldLabel_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = FieldLabel_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function FieldLabel_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var FieldLabel_sizes = ['small', 'normal', 'medium', 'large'];
var FieldLabel_sizeMap = {
  small: 'is-small',
  normal: 'is-normal',
  medium: 'is-medium',
  large: 'is-large'
};
function FieldLabel(_ref) {
  var children = _ref.children,
      className = _ref.className,
      size = _ref.size,
      props = FieldLabel_objectWithoutProperties(_ref, FieldLabel_excluded);

  var isSize = size && FieldLabel_sizeMap[size];
  var classes = classnames_default()('field-label', className, isSize);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, FieldLabel_extends({
    className: classes
  }, props), children);
}
FieldLabel.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(FieldLabel_sizes)
};
FieldLabel.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  size: undefined
};
// CONCATENATED MODULE: ./src/Field/FieldLabel/index.js

// CONCATENATED MODULE: ./src/Field/FieldBody/FieldBody.js
var FieldBody_excluded = ["children", "className"];

function FieldBody_extends() { FieldBody_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return FieldBody_extends.apply(this, arguments); }

function FieldBody_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = FieldBody_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function FieldBody_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function FieldBody(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = FieldBody_objectWithoutProperties(_ref, FieldBody_excluded);

  var classes = classnames_default()('field-body', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, FieldBody_extends({
    className: classes
  }, props), children);
}
FieldBody.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
FieldBody.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Field/FieldBody/index.js

// CONCATENATED MODULE: ./src/Field/Field.js
var Field_excluded = ["align", "addons", "children", "className", "expanded", "fullwidth", "grouped", "horizontal", "multiline", "narrow"];

function Field_extends() { Field_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Field_extends.apply(this, arguments); }

function Field_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Field_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Field_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }







function Field(_ref) {
  var align = _ref.align,
      addons = _ref.addons,
      children = _ref.children,
      className = _ref.className,
      expanded = _ref.expanded,
      fullwidth = _ref.fullwidth,
      grouped = _ref.grouped,
      horizontal = _ref.horizontal,
      multiline = _ref.multiline,
      narrow = _ref.narrow,
      props = Field_objectWithoutProperties(_ref, Field_excluded);

  var classes = classnames_default()('field', className, {
    'is-grouped': grouped,
    'has-addons': addons,
    'has-addons-centered': addons && align === 'center',
    'has-addons-right': addons && align === 'right',
    'has-addons-fullwidth': addons && fullwidth,
    'is-grouped-centered': grouped && align === 'center',
    'is-grouped-right': grouped && align === 'right',
    'is-grouped-multiline': grouped && multiline,
    'is-horizontal': horizontal,
    'is-narrow': narrow
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Field_extends({
    className: classes
  }, props), children);
}
Field.Label = FieldLabel;
Field.Body = FieldBody;
Field.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  grouped: external_prop_types_default.a.bool,
  addons: external_prop_types_default.a.bool,
  align: external_prop_types_default.a.oneOf(['center', 'right']),
  multiline: external_prop_types_default.a.bool,
  fullwidth: external_prop_types_default.a.bool,
  horizontal: external_prop_types_default.a.bool,
  expanded: external_prop_types_default.a.bool,
  narrow: external_prop_types_default.a.bool
};
Field.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  grouped: false,
  addons: false,
  align: undefined,
  multiline: false,
  fullwidth: false,
  horizontal: false,
  expanded: false,
  narrow: false
};
// CONCATENATED MODULE: ./src/Field/index.js

// CONCATENATED MODULE: ./src/File/FileLabel/FileLabel.js
var FileLabel_excluded = ["children", "className"];

function FileLabel_extends() { FileLabel_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return FileLabel_extends.apply(this, arguments); }

function FileLabel_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = FileLabel_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function FileLabel_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function FileLabel(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = FileLabel_objectWithoutProperties(_ref, FileLabel_excluded);

  var classes = classnames_default()('file-label', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, FileLabel_extends({
    className: classes
  }, props), children);
}
FileLabel.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
FileLabel.defaultProps = {
  className: undefined,
  children: null,
  component: 'label'
};
// CONCATENATED MODULE: ./src/File/FileLabel/index.js

// CONCATENATED MODULE: ./src/File/FileInput/FileInput.js
var FileInput_excluded = ["className"];

function FileInput_extends() { FileInput_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return FileInput_extends.apply(this, arguments); }

function FileInput_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = FileInput_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function FileInput_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function FileInput(_ref) {
  var className = _ref.className,
      props = FileInput_objectWithoutProperties(_ref, FileInput_excluded);

  var classes = classnames_default()('file-input', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, FileInput_extends({
    className: classes
  }, props));
}
FileInput.propTypes = {
  className: external_prop_types_default.a.string,
  component: external_prop_types_default.a.elementType
};
FileInput.defaultProps = {
  className: undefined,
  component: 'input'
};
// CONCATENATED MODULE: ./src/File/FileInput/index.js

// CONCATENATED MODULE: ./src/File/FileCTA/FileCTA.js
var FileCTA_excluded = ["children", "className"];

function FileCTA_extends() { FileCTA_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return FileCTA_extends.apply(this, arguments); }

function FileCTA_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = FileCTA_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function FileCTA_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function FileCTA(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = FileCTA_objectWithoutProperties(_ref, FileCTA_excluded);

  var classes = classnames_default()('file-cta', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, FileCTA_extends({
    className: classes
  }, props), children);
}
FileCTA.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
FileCTA.defaultProps = {
  className: undefined,
  children: null,
  component: 'span'
};
// CONCATENATED MODULE: ./src/File/FileCTA/index.js

// CONCATENATED MODULE: ./src/File/FileIcon/FileIcon.js
var FileIcon_excluded = ["children", "className"];

function FileIcon_extends() { FileIcon_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return FileIcon_extends.apply(this, arguments); }

function FileIcon_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = FileIcon_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function FileIcon_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function FileIcon(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = FileIcon_objectWithoutProperties(_ref, FileIcon_excluded);

  var classes = classnames_default()('file-icon', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, FileIcon_extends({
    className: classes
  }, props), children);
}
FileIcon.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
FileIcon.defaultProps = {
  className: undefined,
  children: null,
  component: 'span'
};
// CONCATENATED MODULE: ./src/File/FileIcon/index.js

// CONCATENATED MODULE: ./src/File/FileText/FileText.js
var FileText_excluded = ["children", "className"];

function FileText_extends() { FileText_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return FileText_extends.apply(this, arguments); }

function FileText_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = FileText_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function FileText_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function FileText(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = FileText_objectWithoutProperties(_ref, FileText_excluded);

  var classes = classnames_default()('file-label', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, FileText_extends({
    className: classes
  }, props), children);
}
FileText.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
FileText.defaultProps = {
  className: undefined,
  children: null,
  component: 'span'
};
// CONCATENATED MODULE: ./src/File/FileText/index.js

// CONCATENATED MODULE: ./src/File/FileName/FileName.js
var FileName_excluded = ["children", "className"];

function FileName_extends() { FileName_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return FileName_extends.apply(this, arguments); }

function FileName_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = FileName_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function FileName_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function FileName(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = FileName_objectWithoutProperties(_ref, FileName_excluded);

  var classes = classnames_default()('file-name', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, FileName_extends({
    className: classes
  }, props), children);
}
FileName.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
FileName.defaultProps = {
  className: undefined,
  children: null,
  component: 'span'
};
// CONCATENATED MODULE: ./src/File/FileName/index.js

// CONCATENATED MODULE: ./src/File/File.js
var File_excluded = ["align", "boxed", "children", "className", "color", "fullwidth", "hasName", "size"];

function File_extends() { File_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return File_extends.apply(this, arguments); }

function File_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = File_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function File_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }











var File_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var File_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
var File_sizes = ['small', 'normal', 'medium', 'large'];
var File_sizeMap = {
  small: 'is-small',
  normal: 'is-normal',
  medium: 'is-medium',
  large: 'is-large'
};
var File_aligns = ['center', 'right'];
var File_alignMap = {
  center: 'is-centered',
  right: 'is-right'
};
function File(_ref) {
  var align = _ref.align,
      boxed = _ref.boxed,
      children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      fullwidth = _ref.fullwidth,
      hasName = _ref.hasName,
      size = _ref.size,
      props = File_objectWithoutProperties(_ref, File_excluded);

  var isColor = color && File_colorMap[color];
  var isSize = size && File_sizeMap[size];
  var isAlign = align && File_alignMap[align];
  var classes = classnames_default()('file', className, isColor, isSize, isAlign, {
    'has-name': hasName,
    'is-fullwidth': fullwidth,
    'is-boxed': boxed
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, File_extends({
    type: "file",
    className: classes
  }, props), children);
}
File.Label = FileLabel;
File.Input = FileInput;
File.CTA = FileCTA;
File.Icon = FileIcon;
File.Text = FileText;
File.Name = FileName;
File.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(File_colors),
  size: external_prop_types_default.a.oneOf(File_sizes),
  align: external_prop_types_default.a.oneOf(File_aligns),
  hasName: external_prop_types_default.a.bool,
  boxed: external_prop_types_default.a.bool,
  fullwidth: external_prop_types_default.a.bool
};
File.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  color: undefined,
  size: undefined,
  align: undefined,
  hasName: false,
  boxed: false,
  fullwidth: false
};
// CONCATENATED MODULE: ./src/File/index.js

// CONCATENATED MODULE: ./src/Help/Help.js
var Help_excluded = ["children", "className", "color"];

function Help_extends() { Help_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Help_extends.apply(this, arguments); }

function Help_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Help_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Help_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Help_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark', 'text'];
var Help_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
function Help_Block(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      props = Help_objectWithoutProperties(_ref, Help_excluded);

  var isColor = color && Help_colorMap[color];
  var classes = classnames_default()('help', className, isColor);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Help_extends({
    className: classes
  }, props), children);
}
Help_Block.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(Help_colors)
};
Help_Block.defaultProps = {
  className: undefined,
  children: null,
  component: 'p',
  color: undefined
};
// CONCATENATED MODULE: ./src/Help/index.js

// CONCATENATED MODULE: ./src/Input/Input.js
var Input_excluded = ["active", "className", "color", "focused", "fullwidth", "hovered", "inline", "rounded", "size"];

function Input_extends() { Input_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Input_extends.apply(this, arguments); }

function Input_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Input_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Input_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Input_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var Input_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
var Input_sizes = ['small', 'medium', 'large'];
var Input_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
function Input(_ref) {
  var active = _ref.active,
      className = _ref.className,
      color = _ref.color,
      focused = _ref.focused,
      fullwidth = _ref.fullwidth,
      hovered = _ref.hovered,
      inline = _ref.inline,
      rounded = _ref.rounded,
      size = _ref.size,
      props = Input_objectWithoutProperties(_ref, Input_excluded);

  var isColor = color && Input_colorMap[color];
  var isSize = size && Input_sizeMap[size];
  var classes = classnames_default()('input', className, isColor, isSize, {
    'is-inline': inline,
    'is-fullwidth': fullwidth,
    'is-active': active,
    'is-rounded': rounded,
    'is-hovered': hovered,
    'is-focused': focused,
    'is-static': props["static"]
  }); // eslint-disable-next-line

  delete props["static"];
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Input_extends({
    className: classes
  }, props));
}
Input.propTypes = {
  className: external_prop_types_default.a.string,
  component: external_prop_types_default.a.elementType,
  type: external_prop_types_default.a.oneOf(['text', 'password', 'email', 'tel']),
  color: external_prop_types_default.a.oneOf(Input_colors),
  size: external_prop_types_default.a.oneOf(Input_sizes),
  inline: external_prop_types_default.a.bool,
  fullwidth: external_prop_types_default.a.bool,
  active: external_prop_types_default.a.bool,
  rounded: external_prop_types_default.a.bool,
  hovered: external_prop_types_default.a.bool,
  focused: external_prop_types_default.a.bool,
  disabled: external_prop_types_default.a.bool,
  readOnly: external_prop_types_default.a.bool,
  "static": external_prop_types_default.a.bool
};
Input.defaultProps = {
  className: undefined,
  component: 'input',
  type: undefined,
  color: undefined,
  size: undefined,
  inline: false,
  fullwidth: false,
  active: false,
  rounded: false,
  hovered: false,
  focused: false,
  disabled: false,
  readOnly: false,
  "static": false
};
// CONCATENATED MODULE: ./src/Input/index.js

// CONCATENATED MODULE: ./src/Label/Label.js
var Label_excluded = ["children", "className", "size"];

function Label_extends() { Label_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Label_extends.apply(this, arguments); }

function Label_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Label_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Label_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Label_sizes = ['small', 'medium', 'large'];
var Label_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
function Label(_ref) {
  var children = _ref.children,
      className = _ref.className,
      size = _ref.size,
      props = Label_objectWithoutProperties(_ref, Label_excluded);

  var isSize = size && Label_sizeMap[size];
  var classes = classnames_default()('label', className, isSize);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Label_extends({
    className: classes
  }, props), children);
}
Label.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(Label_sizes)
};
Label.defaultProps = {
  className: undefined,
  children: null,
  component: 'label',
  size: undefined
};
// CONCATENATED MODULE: ./src/Label/index.js

// CONCATENATED MODULE: ./src/Radio/Radio.js
var Radio_excluded = ["children", "className"];

function Radio_extends() { Radio_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Radio_extends.apply(this, arguments); }

function Radio_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Radio_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Radio_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function Radio(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = Radio_objectWithoutProperties(_ref, Radio_excluded);

  var classes = classnames_default()('radio', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Radio_extends({
    className: classes
  }, props), children);
}
Radio.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  disabled: external_prop_types_default.a.bool
};
Radio.defaultProps = {
  className: undefined,
  children: null,
  component: 'label',
  disabled: false
};
// CONCATENATED MODULE: ./src/Radio/index.js

// CONCATENATED MODULE: ./src/Select/SelectContent/SelectContent.js
var SelectContent_excluded = ["active", "children", "className", "focused", "hovered"];

function SelectContent_extends() { SelectContent_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return SelectContent_extends.apply(this, arguments); }

function SelectContent_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = SelectContent_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function SelectContent_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function SelectContent(_ref) {
  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      focused = _ref.focused,
      hovered = _ref.hovered,
      props = SelectContent_objectWithoutProperties(_ref, SelectContent_excluded);

  var classes = classnames_default()(className, {
    'is-hovered': hovered,
    'is-focused': focused,
    'is-active': active
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, SelectContent_extends({
    className: classes
  }, props), children);
}
SelectContent.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  hovered: external_prop_types_default.a.bool,
  focused: external_prop_types_default.a.bool,
  active: external_prop_types_default.a.bool
};
SelectContent.defaultProps = {
  className: undefined,
  children: null,
  component: 'select',
  hovered: false,
  focused: false,
  active: false
};
// CONCATENATED MODULE: ./src/Select/SelectContent/index.js

// CONCATENATED MODULE: ./src/Select/SelectOption/SelectOption.js
var SelectOption_excluded = ["children", "className"];

function SelectOption_extends() { SelectOption_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return SelectOption_extends.apply(this, arguments); }

function SelectOption_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = SelectOption_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function SelectOption_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




function SelectOption_SelectContent(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = SelectOption_objectWithoutProperties(_ref, SelectOption_excluded);

  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, SelectOption_extends({
    className: className
  }, props), children);
}
SelectOption_SelectContent.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  selected: external_prop_types_default.a.bool
};
SelectOption_SelectContent.defaultProps = {
  className: undefined,
  children: null,
  component: 'option',
  selected: false
};
// CONCATENATED MODULE: ./src/Select/SelectOption/index.js

// CONCATENATED MODULE: ./src/Select/Select.js
var Select_excluded = ["children", "className", "color", "fullwidth", "loading", "rounded", "size", "multiple"];

function Select_extends() { Select_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Select_extends.apply(this, arguments); }

function Select_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Select_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Select_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }







var Select_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var Select_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
var Select_sizes = ['small', 'medium', 'large'];
var Select_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
function Select(_ref) {
  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      fullwidth = _ref.fullwidth,
      loading = _ref.loading,
      rounded = _ref.rounded,
      size = _ref.size,
      multiple = _ref.multiple,
      props = Select_objectWithoutProperties(_ref, Select_excluded);

  var isColor = color && Select_colorMap[color];
  var isSize = size && Select_sizeMap[size];
  var classes = classnames_default()('select', className, isColor, isSize, {
    'is-fullwidth': fullwidth,
    'is-multiple': multiple,
    'is-rounded': rounded,
    'is-loading': loading
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Select_extends({
    className: classes
  }, props), children);
}
Select.Content = SelectContent;
Select.Option = SelectOption_SelectContent;
Select.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(Select_colors),
  size: external_prop_types_default.a.oneOf(Select_sizes),
  fullwidth: external_prop_types_default.a.bool,
  multiple: external_prop_types_default.a.bool,
  rounded: external_prop_types_default.a.bool,
  loading: external_prop_types_default.a.bool
};
Select.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  color: undefined,
  size: undefined,
  fullwidth: false,
  multiple: false,
  rounded: false,
  loading: false
};
// CONCATENATED MODULE: ./src/Select/index.js

// CONCATENATED MODULE: ./src/Textarea/Textarea.js
var Textarea_excluded = ["active", "className", "color", "fixed", "focused", "fullwidth", "hovered", "inline", "size"];

function Textarea_extends() { Textarea_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Textarea_extends.apply(this, arguments); }

function Textarea_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Textarea_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Textarea_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Textarea_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var Textarea_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
var Textarea_sizes = ['small', 'medium', 'large'];
var Textarea_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large'
};
function Textarea(_ref) {
  var active = _ref.active,
      className = _ref.className,
      color = _ref.color,
      fixed = _ref.fixed,
      focused = _ref.focused,
      fullwidth = _ref.fullwidth,
      hovered = _ref.hovered,
      inline = _ref.inline,
      size = _ref.size,
      props = Textarea_objectWithoutProperties(_ref, Textarea_excluded);

  var isColor = color && Textarea_colorMap[color];
  var isSize = size && Textarea_sizeMap[size];
  var classes = classnames_default()('textarea', className, isColor, isSize, {
    'has-fixed-size': fixed,
    'is-inline': inline,
    'is-fullwidth': fullwidth,
    'is-active': active,
    'is-hovered': hovered,
    'is-focused': focused
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Textarea_extends({
    className: classes
  }, props));
}
Textarea.propTypes = {
  className: external_prop_types_default.a.string,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(Textarea_colors),
  size: external_prop_types_default.a.oneOf(Textarea_sizes),
  fixed: external_prop_types_default.a.bool,
  inline: external_prop_types_default.a.bool,
  fullwidth: external_prop_types_default.a.bool,
  active: external_prop_types_default.a.bool,
  hovered: external_prop_types_default.a.bool,
  focused: external_prop_types_default.a.bool,
  disabled: external_prop_types_default.a.bool,
  readOnly: external_prop_types_default.a.bool
};
Textarea.defaultProps = {
  className: undefined,
  component: 'textarea',
  color: undefined,
  size: undefined,
  fixed: false,
  inline: false,
  fullwidth: false,
  active: false,
  hovered: false,
  focused: false,
  disabled: false,
  readOnly: false
};
// CONCATENATED MODULE: ./src/Textarea/index.js

// CONCATENATED MODULE: ./src/Column/Column.js
var Column_excluded = ["children", "className", "desktop", "fullhd", "mobile", "narrow", "offset", "size", "tablet", "touch", "widescreen"];

function Column_extends() { Column_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Column_extends.apply(this, arguments); }

function Column_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function Column_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Column_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Column_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Column_sizes = ['full', 'half', 'one-third', 'two-thirds', 'one-quarter', 'three-quarters', 'one-fifth', 'two-fifths', 'three-fifths', 'four-fifths', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];
var Column_sizeMap = {};
var offsetMap = {};
Column_sizes.forEach(function (size) {
  Column_sizeMap[size] = "is-".concat(size);
  offsetMap[size] = "is-offset-".concat(size);
});
function Column(_ref) {
  var _classNames;

  var children = _ref.children,
      className = _ref.className,
      desktop = _ref.desktop,
      fullhd = _ref.fullhd,
      mobile = _ref.mobile,
      narrow = _ref.narrow,
      offset = _ref.offset,
      size = _ref.size,
      tablet = _ref.tablet,
      touch = _ref.touch,
      widescreen = _ref.widescreen,
      props = Column_objectWithoutProperties(_ref, Column_excluded);

  var isSize = size && Column_sizeMap[size];
  var isOffset = offset && offsetMap[offset];
  var classes = classnames_default()('column', className, isSize, isOffset, (_classNames = {}, Column_defineProperty(_classNames, "".concat(Column_sizeMap[mobile.size], "-mobile"), !!mobile.size && Column_sizes.includes(mobile.size)), Column_defineProperty(_classNames, "".concat(Column_sizeMap[tablet.size], "-tablet"), !!tablet.size && Column_sizes.includes(tablet.size)), Column_defineProperty(_classNames, "".concat(Column_sizeMap[touch.size], "-touch"), !!touch.size && Column_sizes.includes(touch.size)), Column_defineProperty(_classNames, "".concat(Column_sizeMap[desktop.size], "-desktop"), !!desktop.size && Column_sizes.includes(desktop.size)), Column_defineProperty(_classNames, "".concat(Column_sizeMap[widescreen.size], "-widescreen"), !!widescreen.size && Column_sizes.includes(widescreen.size)), Column_defineProperty(_classNames, "".concat(Column_sizeMap[fullhd.size], "-fullhd"), !!fullhd.size && Column_sizes.includes(fullhd.size)), Column_defineProperty(_classNames, "".concat(offsetMap[mobile.offset], "-mobile"), !!mobile.offset && Column_sizes.includes(mobile.offset)), Column_defineProperty(_classNames, "".concat(offsetMap[tablet.offset], "-tablet"), !!tablet.offset && Column_sizes.includes(tablet.offset)), Column_defineProperty(_classNames, "".concat(offsetMap[touch.offset], "-touch"), !!touch.offset && Column_sizes.includes(touch.offset)), Column_defineProperty(_classNames, "".concat(offsetMap[desktop.offset], "-desktop"), !!desktop.offset && Column_sizes.includes(desktop.offset)), Column_defineProperty(_classNames, "".concat(offsetMap[widescreen.offset], "-widescreen"), !!widescreen.offset && Column_sizes.includes(widescreen.offset)), Column_defineProperty(_classNames, "".concat(offsetMap[fullhd.offset], "-fullhd"), !!fullhd.offset && Column_sizes.includes(fullhd.offset)), Column_defineProperty(_classNames, 'is-narrow', narrow), Column_defineProperty(_classNames, 'is-narrow-mobile', mobile.narrow), Column_defineProperty(_classNames, 'is-narrow-tablet', tablet.narrow), Column_defineProperty(_classNames, 'is-narrow-touch', touch.narrow), Column_defineProperty(_classNames, 'is-narrow-desktop', desktop.narrow), Column_defineProperty(_classNames, 'is-narrow-widescreen', widescreen.narrow), Column_defineProperty(_classNames, 'is-narrow-fullhd', fullhd.narrow), _classNames));
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Column_extends({
    className: classes
  }, props), children);
}
Column.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(Column_sizes),
  offset: external_prop_types_default.a.oneOf(Column_sizes),
  narrow: external_prop_types_default.a.bool,
  mobile: external_prop_types_default.a.shape({
    size: external_prop_types_default.a.oneOf(Column_sizes),
    offset: external_prop_types_default.a.oneOf(Column_sizes),
    narrow: external_prop_types_default.a.bool
  }),
  tablet: external_prop_types_default.a.shape({
    size: external_prop_types_default.a.oneOf(Column_sizes),
    offset: external_prop_types_default.a.oneOf(Column_sizes),
    narrow: external_prop_types_default.a.bool
  }),
  touch: external_prop_types_default.a.shape({
    size: external_prop_types_default.a.oneOf(Column_sizes),
    offset: external_prop_types_default.a.oneOf(Column_sizes),
    narrow: external_prop_types_default.a.bool
  }),
  desktop: external_prop_types_default.a.shape({
    size: external_prop_types_default.a.oneOf(Column_sizes),
    offset: external_prop_types_default.a.oneOf(Column_sizes),
    narrow: external_prop_types_default.a.bool
  }),
  widescreen: external_prop_types_default.a.shape({
    size: external_prop_types_default.a.oneOf(Column_sizes),
    offset: external_prop_types_default.a.oneOf(Column_sizes),
    narrow: external_prop_types_default.a.bool
  }),
  fullhd: external_prop_types_default.a.shape({
    size: external_prop_types_default.a.oneOf(Column_sizes),
    offset: external_prop_types_default.a.oneOf(Column_sizes),
    narrow: external_prop_types_default.a.bool
  })
};
Column.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  size: undefined,
  offset: undefined,
  narrow: false,
  mobile: {},
  tablet: {},
  touch: {},
  desktop: {},
  widescreen: {},
  fullhd: {}
};
// CONCATENATED MODULE: ./src/Column/index.js

// CONCATENATED MODULE: ./src/Columns/Columns.js
var Columns_excluded = ["activate", "centered", "children", "className", "desktop", "gap", "gapless", "multiline", "mobile", "vcentered", "tablet", "touch", "widescreen", "fullhd"];

function Columns_extends() { Columns_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Columns_extends.apply(this, arguments); }

function Columns_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function Columns_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Columns_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Columns_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var gaps = ['0', '1', '2', '3', '4', '5', '6', '7', '8'];
var gapMap = {};
gaps.forEach(function (gap) {
  gapMap[gap] = "is-".concat(gap);
});
function Columns(_ref) {
  var _classNames;

  var activate = _ref.activate,
      centered = _ref.centered,
      children = _ref.children,
      className = _ref.className,
      desktop = _ref.desktop,
      gap = _ref.gap,
      gapless = _ref.gapless,
      multiline = _ref.multiline,
      mobile = _ref.mobile,
      vcentered = _ref.vcentered,
      tablet = _ref.tablet,
      touch = _ref.touch,
      widescreen = _ref.widescreen,
      fullhd = _ref.fullhd,
      props = Columns_objectWithoutProperties(_ref, Columns_excluded);

  var isGap = gap && gapMap[gap];
  var classes = classnames_default()('columns', className, isGap, (_classNames = {}, Columns_defineProperty(_classNames, "".concat(gapMap[mobile.gap], "-mobile"), !!mobile.gap && gaps.includes(mobile.gap)), Columns_defineProperty(_classNames, "".concat(gapMap[tablet.gap], "-tablet"), !!tablet.gap && !tablet.only && gaps.includes(tablet.gap)), Columns_defineProperty(_classNames, "".concat(gapMap[tablet.gap], "-tablet-only"), !!tablet.gap && tablet.only && gaps.includes(tablet.gap)), Columns_defineProperty(_classNames, "".concat(gapMap[touch.gap], "-touch"), !!touch.gap && gaps.includes(touch.gap)), Columns_defineProperty(_classNames, "".concat(gapMap[desktop.gap], "-desktop"), !!desktop.gap && !desktop.only && gaps.includes(desktop.gap)), Columns_defineProperty(_classNames, "".concat(gapMap[desktop.gap], "-desktop-only"), !!desktop.gap && desktop.only && gaps.includes(desktop.gap)), Columns_defineProperty(_classNames, "".concat(gapMap[widescreen.gap], "-widescreen"), !!widescreen.gap && !widescreen.only && gaps.includes(widescreen.gap)), Columns_defineProperty(_classNames, "".concat(gapMap[widescreen.gap], "-widescreen-only"), !!widescreen.gap && widescreen.only && gaps.includes(widescreen.gap)), Columns_defineProperty(_classNames, "".concat(gapMap[fullhd.gap], "-fullhd"), !!fullhd.gap && gaps.includes(fullhd.gap)), Columns_defineProperty(_classNames, 'is-mobile', activate === 'mobile'), Columns_defineProperty(_classNames, 'is-desktop', activate === 'desktop'), Columns_defineProperty(_classNames, 'is-centered', centered), Columns_defineProperty(_classNames, 'is-vcentered', vcentered), Columns_defineProperty(_classNames, 'is-gapless', gapless), Columns_defineProperty(_classNames, 'is-multiline', multiline), Columns_defineProperty(_classNames, 'is-variable', !!gap || !!mobile.gap || !!tablet.gap || !!touch.gap || !!desktop.gap || !!widescreen.gap || !!fullhd.gap), _classNames));
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Columns_extends({
    className: classes
  }, props), children);
}
Columns.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  gap: external_prop_types_default.a.oneOf(gaps),
  mobile: external_prop_types_default.a.shape({
    gap: external_prop_types_default.a.oneOf(gaps)
  }),
  tablet: external_prop_types_default.a.shape({
    gap: external_prop_types_default.a.oneOf(gaps),
    only: external_prop_types_default.a.bool
  }),
  touch: external_prop_types_default.a.shape({
    gap: external_prop_types_default.a.oneOf(gaps)
  }),
  desktop: external_prop_types_default.a.shape({
    gap: external_prop_types_default.a.oneOf(gaps),
    only: external_prop_types_default.a.bool
  }),
  widescreen: external_prop_types_default.a.shape({
    gap: external_prop_types_default.a.oneOf(gaps),
    only: external_prop_types_default.a.bool
  }),
  fullhd: external_prop_types_default.a.shape({
    gap: external_prop_types_default.a.oneOf(gaps)
  }),
  activate: external_prop_types_default.a.oneOf(['mobile', 'tablet', 'desktop']),
  centered: external_prop_types_default.a.bool,
  vcentered: external_prop_types_default.a.bool,
  gapless: external_prop_types_default.a.bool,
  multiline: external_prop_types_default.a.bool
};
Columns.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  gap: undefined,
  mobile: {},
  tablet: {},
  touch: {},
  desktop: {},
  widescreen: {},
  fullhd: {},
  activate: 'tablet',
  centered: false,
  vcentered: false,
  gapless: false,
  multiline: false
};
// CONCATENATED MODULE: ./src/Columns/index.js

// CONCATENATED MODULE: ./src/Container/Container.js
var Container_excluded = ["breakpoint", "children", "className", "fluid"];

function Container_extends() { Container_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Container_extends.apply(this, arguments); }

function Container_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Container_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Container_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var breakpoints = ['widescreen', 'fullhd', 'max-desktop', 'max-widescreen'];
var breakpointMap = {
  widescreen: 'is-widescreen',
  fullhd: 'is-fullhd',
  'max-desktop': 'is-max-desktop',
  'max-widescreen': 'is-max-widescreen'
};
function Container(_ref) {
  var breakpoint = _ref.breakpoint,
      children = _ref.children,
      className = _ref.className,
      fluid = _ref.fluid,
      props = Container_objectWithoutProperties(_ref, Container_excluded);

  var isBreakpoint = breakpoint && breakpointMap[breakpoint];
  var classes = classnames_default()('container', className, isBreakpoint, {
    'is-fluid': fluid
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Container_extends({
    className: classes
  }, props), children);
}
Container.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  breakpoint: external_prop_types_default.a.oneOf(breakpoints),
  fluid: external_prop_types_default.a.bool
};
Container.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  breakpoint: undefined,
  fluid: false
};
// CONCATENATED MODULE: ./src/Container/index.js

// CONCATENATED MODULE: ./src/Footer/Footer.js
var Footer_excluded = ["children", "className"];

function Footer_extends() { Footer_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Footer_extends.apply(this, arguments); }

function Footer_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Footer_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Footer_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function Footer(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = Footer_objectWithoutProperties(_ref, Footer_excluded);

  var classes = classnames_default()('footer', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Footer_extends({
    className: classes
  }, props), children);
}
Footer.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
Footer.defaultProps = {
  className: undefined,
  children: null,
  component: 'footer'
};
// CONCATENATED MODULE: ./src/Footer/index.js

// CONCATENATED MODULE: ./src/Hero/HeroHead/HeroHead.js
var HeroHead_excluded = ["children", "className"];

function HeroHead_extends() { HeroHead_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return HeroHead_extends.apply(this, arguments); }

function HeroHead_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = HeroHead_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function HeroHead_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function HeroHead(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = HeroHead_objectWithoutProperties(_ref, HeroHead_excluded);

  var classes = classnames_default()('hero-head', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, HeroHead_extends({
    className: classes
  }, props), children);
}
HeroHead.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
HeroHead.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Hero/HeroHead/index.js

// CONCATENATED MODULE: ./src/Hero/HeroBody/HeroBody.js
var HeroBody_excluded = ["children", "className"];

function HeroBody_extends() { HeroBody_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return HeroBody_extends.apply(this, arguments); }

function HeroBody_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = HeroBody_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function HeroBody_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function HeroBody(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = HeroBody_objectWithoutProperties(_ref, HeroBody_excluded);

  var classes = classnames_default()('hero-body', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, HeroBody_extends({
    className: classes
  }, props), children);
}
HeroBody.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
HeroBody.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Hero/HeroBody/index.js

// CONCATENATED MODULE: ./src/Hero/HeroFoot/HeroFoot.js
var HeroFoot_excluded = ["children", "className"];

function HeroFoot_extends() { HeroFoot_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return HeroFoot_extends.apply(this, arguments); }

function HeroFoot_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = HeroFoot_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function HeroFoot_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function HeroFoot(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = HeroFoot_objectWithoutProperties(_ref, HeroFoot_excluded);

  var classes = classnames_default()('hero-foot', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, HeroFoot_extends({
    className: classes
  }, props), children);
}
HeroFoot.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
HeroFoot.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Hero/HeroFoot/index.js

// CONCATENATED MODULE: ./src/Hero/HeroVideo/HeroVideo.js
var HeroVideo_excluded = ["children", "className", "transparent"];

function HeroVideo_extends() { HeroVideo_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return HeroVideo_extends.apply(this, arguments); }

function HeroVideo_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = HeroVideo_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function HeroVideo_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function HeroVideo(_ref) {
  var children = _ref.children,
      className = _ref.className,
      transparent = _ref.transparent,
      props = HeroVideo_objectWithoutProperties(_ref, HeroVideo_excluded);

  var classes = classnames_default()('hero-video', className, {
    'is-transparent': transparent
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, HeroVideo_extends({
    className: classes
  }, props), children);
}
HeroVideo.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  transparent: external_prop_types_default.a.bool
};
HeroVideo.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  transparent: false
};
// CONCATENATED MODULE: ./src/Hero/HeroVideo/index.js

// CONCATENATED MODULE: ./src/Hero/HeroButtons/HeroButtons.js
var HeroButtons_excluded = ["children", "className"];

function HeroButtons_extends() { HeroButtons_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return HeroButtons_extends.apply(this, arguments); }

function HeroButtons_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = HeroButtons_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function HeroButtons_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function HeroButtons(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = HeroButtons_objectWithoutProperties(_ref, HeroButtons_excluded);

  var classes = classnames_default()('hero-buttons', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, HeroButtons_extends({
    className: classes
  }, props), children);
}
HeroButtons.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
HeroButtons.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Hero/HeroButtons/index.js

// CONCATENATED MODULE: ./src/Hero/Hero.js
var Hero_excluded = ["bold", "children", "className", "color", "size"];

function Hero_extends() { Hero_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Hero_extends.apply(this, arguments); }

function Hero_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Hero_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Hero_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }










var Hero_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var Hero_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
var Hero_sizes = ['small', 'medium', 'large', 'halfheight', 'fullheight', 'fullheight-navbar'];
var Hero_sizeMap = {
  small: 'is-small',
  medium: 'is-medium',
  large: 'is-large',
  halfheight: 'is-halfheight',
  fullheight: 'is-fullheight',
  'fullheight-navbar': 'is-fullheight-with-navbar'
};
function Hero(_ref) {
  var bold = _ref.bold,
      children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      size = _ref.size,
      props = Hero_objectWithoutProperties(_ref, Hero_excluded);

  var isColor = color && Hero_colorMap[color];
  var isSize = size && Hero_sizeMap[size];
  var classes = classnames_default()('hero', className, isColor, isSize, {
    'is-bold': bold
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Hero_extends({
    className: classes
  }, props), children);
}
Hero.Head = HeroHead;
Hero.Body = HeroBody;
Hero.Foot = HeroFoot;
Hero.Video = HeroVideo;
Hero.Buttons = HeroButtons;
Hero.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  color: external_prop_types_default.a.oneOf(Hero_colors),
  size: external_prop_types_default.a.oneOf(Hero_sizes),
  bold: external_prop_types_default.a.bool
};
Hero.defaultProps = {
  className: undefined,
  children: null,
  component: 'section',
  color: undefined,
  size: undefined,
  bold: false
};
// CONCATENATED MODULE: ./src/Hero/index.js

// CONCATENATED MODULE: ./src/Level/LevelLeft/LevelLeft.js
var LevelLeft_excluded = ["children", "className"];

function LevelLeft_extends() { LevelLeft_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return LevelLeft_extends.apply(this, arguments); }

function LevelLeft_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = LevelLeft_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function LevelLeft_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function LevelLeft(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = LevelLeft_objectWithoutProperties(_ref, LevelLeft_excluded);

  var classes = classnames_default()('level-left', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, LevelLeft_extends({
    className: classes
  }, props), children);
}
LevelLeft.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
LevelLeft.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Level/LevelLeft/index.js

// CONCATENATED MODULE: ./src/Level/LevelRight/LevelRight.js
var LevelRight_excluded = ["children", "className"];

function LevelRight_extends() { LevelRight_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return LevelRight_extends.apply(this, arguments); }

function LevelRight_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = LevelRight_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function LevelRight_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function LevelRight(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = LevelRight_objectWithoutProperties(_ref, LevelRight_excluded);

  var classes = classnames_default()('level-right', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, LevelRight_extends({
    className: classes
  }, props), children);
}
LevelRight.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
LevelRight.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Level/LevelRight/index.js

// CONCATENATED MODULE: ./src/Level/LevelItem/LevelItem.js
var LevelItem_excluded = ["children", "className"];

function LevelItem_extends() { LevelItem_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return LevelItem_extends.apply(this, arguments); }

function LevelItem_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = LevelItem_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function LevelItem_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function LevelItem(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = LevelItem_objectWithoutProperties(_ref, LevelItem_excluded);

  var classes = classnames_default()('level-item', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, LevelItem_extends({
    className: classes
  }, props), children);
}
LevelItem.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
LevelItem.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Level/LevelItem/index.js

// CONCATENATED MODULE: ./src/Level/Level.js
var Level_excluded = ["children", "className", "mobile"];

function Level_extends() { Level_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Level_extends.apply(this, arguments); }

function Level_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Level_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Level_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }








function Level(_ref) {
  var children = _ref.children,
      className = _ref.className,
      mobile = _ref.mobile,
      props = Level_objectWithoutProperties(_ref, Level_excluded);

  var classes = classnames_default()('level', className, {
    'is-mobile': mobile
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Level_extends({
    className: classes
  }, props), children);
}
Level.Left = LevelLeft;
Level.Right = LevelRight;
Level.Item = LevelItem;
Level.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  mobile: external_prop_types_default.a.bool
};
Level.defaultProps = {
  className: undefined,
  children: null,
  component: 'nav',
  mobile: false
};
// CONCATENATED MODULE: ./src/Level/index.js

// CONCATENATED MODULE: ./src/Media/MediaLeft/MediaLeft.js
var MediaLeft_excluded = ["children", "className"];

function MediaLeft_extends() { MediaLeft_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return MediaLeft_extends.apply(this, arguments); }

function MediaLeft_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = MediaLeft_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function MediaLeft_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function MediaLeft(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = MediaLeft_objectWithoutProperties(_ref, MediaLeft_excluded);

  var classes = classnames_default()('media-left', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, MediaLeft_extends({
    className: classes
  }, props), children);
}
MediaLeft.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
MediaLeft.defaultProps = {
  className: undefined,
  children: null,
  component: 'figure'
};
// CONCATENATED MODULE: ./src/Media/MediaLeft/index.js

// CONCATENATED MODULE: ./src/Media/MediaRight/MediaRight.js
var MediaRight_excluded = ["children", "className"];

function MediaRight_extends() { MediaRight_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return MediaRight_extends.apply(this, arguments); }

function MediaRight_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = MediaRight_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function MediaRight_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function MediaRight(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = MediaRight_objectWithoutProperties(_ref, MediaRight_excluded);

  var classes = classnames_default()('media-right', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, MediaRight_extends({
    className: classes
  }, props), children);
}
MediaRight.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
MediaRight.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Media/MediaRight/index.js

// CONCATENATED MODULE: ./src/Media/MediaContent/MediaContent.js
var MediaContent_excluded = ["children", "className"];

function MediaContent_extends() { MediaContent_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return MediaContent_extends.apply(this, arguments); }

function MediaContent_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = MediaContent_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function MediaContent_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





function MediaContent(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = MediaContent_objectWithoutProperties(_ref, MediaContent_excluded);

  var classes = classnames_default()('media-content', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, MediaContent_extends({
    className: classes
  }, props), children);
}
MediaContent.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
MediaContent.defaultProps = {
  className: undefined,
  children: null,
  component: 'div'
};
// CONCATENATED MODULE: ./src/Media/MediaContent/index.js

// CONCATENATED MODULE: ./src/Media/Media.js
var Media_excluded = ["children", "className"];

function Media_extends() { Media_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Media_extends.apply(this, arguments); }

function Media_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Media_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Media_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }








function Media(_ref) {
  var children = _ref.children,
      className = _ref.className,
      props = Media_objectWithoutProperties(_ref, Media_excluded);

  var classes = classnames_default()('media', className);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Media_extends({
    className: classes
  }, props), children);
}
Media.Left = MediaLeft;
Media.Right = MediaRight;
Media.Content = MediaContent;
Media.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType
};
Media.defaultProps = {
  className: undefined,
  children: null,
  component: 'article'
};
// CONCATENATED MODULE: ./src/Media/index.js

// CONCATENATED MODULE: ./src/Section/Section.js
var Section_excluded = ["children", "className", "size"];

function Section_extends() { Section_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Section_extends.apply(this, arguments); }

function Section_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Section_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Section_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Section_sizes = ['medium', 'large'];
var Section_sizeMap = {
  medium: 'is-medium',
  large: 'is-large'
};
function Section(_ref) {
  var children = _ref.children,
      className = _ref.className,
      size = _ref.size,
      props = Section_objectWithoutProperties(_ref, Section_excluded);

  var isSize = size && Section_sizeMap[size];
  var classes = classnames_default()('section', className, isSize);
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Section_extends({
    className: classes
  }, props), children);
}
Section.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  size: external_prop_types_default.a.oneOf(Section_sizes)
};
Section.defaultProps = {
  className: undefined,
  children: null,
  component: 'section',
  size: undefined
};
// CONCATENATED MODULE: ./src/Section/index.js

// CONCATENATED MODULE: ./src/Tile/Tile.js
var Tile_excluded = ["box", "children", "className", "color", "light", "type", "vertical", "size"];

function Tile_extends() { Tile_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Tile_extends.apply(this, arguments); }

function Tile_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Tile_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Tile_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var types = ['ancestor', 'parent', 'child'];
var typeMap = {
  ancestor: 'is-ancestor',
  parent: 'is-parent',
  child: 'is-child'
};
var Tile_colors = ['primary', 'link', 'info', 'success', 'warning', 'danger', 'white', 'black', 'light', 'dark'];
var Tile_colorMap = {
  primary: 'is-primary',
  link: 'is-link',
  info: 'is-info',
  success: 'is-success',
  warning: 'is-warning',
  danger: 'is-danger',
  white: 'is-white',
  black: 'is-black',
  light: 'is-light',
  dark: 'is-dark'
};
var Tile_sizes = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];
var Tile_sizeMap = {};
Tile_sizes.forEach(function (size) {
  Tile_sizeMap[size] = "is-".concat(size);
});
function Tile(_ref) {
  var box = _ref.box,
      children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      light = _ref.light,
      type = _ref.type,
      vertical = _ref.vertical,
      size = _ref.size,
      props = Tile_objectWithoutProperties(_ref, Tile_excluded);

  var isType = type && typeMap[type];
  var isColor = color && Tile_colorMap[color];
  var isSize = size && Tile_sizeMap[size];
  var classes = classnames_default()('tile', className, isType, isColor, isSize, {
    notification: color,
    'is-light': light,
    'is-vertical': vertical,
    box: box
  });
  return /*#__PURE__*/external_react_default.a.createElement(Element_Element, Tile_extends({
    className: classes
  }, props), children);
}
Tile.propTypes = {
  className: external_prop_types_default.a.string,
  children: external_prop_types_default.a.node,
  component: external_prop_types_default.a.elementType,
  type: external_prop_types_default.a.oneOf(types),
  size: external_prop_types_default.a.oneOf(Tile_sizes),
  color: external_prop_types_default.a.oneOf(Tile_colors),
  light: external_prop_types_default.a.bool,
  vertical: external_prop_types_default.a.bool,
  box: external_prop_types_default.a.bool
};
Tile.defaultProps = {
  className: undefined,
  children: null,
  component: 'div',
  type: undefined,
  size: undefined,
  color: undefined,
  light: false,
  vertical: false,
  box: false
};
// CONCATENATED MODULE: ./src/Tile/index.js

// CONCATENATED MODULE: ./src/index.js
// Elements
















 // Components










 // Form










 // Layout











/***/ })
/******/ ]);
});