{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getAllUsersFromFile, getOneUserFromFile } from \"../api/usersFromFile\";\nconst initialUsersFromFileState = {\n  usersFromFile: [],\n  userFromFile: {},\n  isLoading: false,\n  isError: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const getUsersFromFile = createAsyncThunk(\"/usersfromfile\", async thunkAPI => {\n  try {\n    return await getAllUsersFromFile();\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const getUserFromFile = createAsyncThunk(\"/usersfromfile/getOneUser\", async (userId, thunkAPI) => {\n  try {\n    return await getOneUserFromFile(userId);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nconst usersFromFileSlice = createSlice({\n  name: \"usersFromFile\",\n  initialState: initialUsersFromFileState,\n  reducers: {\n    reset: state => initialUsersFromFileState\n  },\n  extraReducers: builder => {\n    builder.addCase(getUsersFromFile.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(getUsersFromFile.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.usersFromFile = action.payload;\n    }).addCase(getUsersFromFile.rejected, (state, action) => {\n      state.isLoading = false;\n    }).addCase(getUserFromFile.pending, (state, action) => {\n      state.isLoading = true;\n    }).addCase(getUserFromFile.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.userFromFile = action.payload;\n    }).addCase(getUserFromFile.rejected, (state, action) => {\n      state.isLoading = false;\n    });\n  }\n});\nexport default usersFromFileSlice.reducer;\nexport const {\n  reset\n} = usersFromFileSlice.actions;\nexport const selectAllUsersFromFile = state => state.usersFromFile.usersFromFile;\nexport const selectOneUserFromFile = state => state.usersFromFile.userFromFile;","map":{"version":3,"names":["createSlice","createAsyncThunk","getAllUsersFromFile","getOneUserFromFile","initialUsersFromFileState","usersFromFile","userFromFile","isLoading","isError","isSuccess","message","getUsersFromFile","thunkAPI","error","response","data","toString","rejectWithValue","getUserFromFile","userId","usersFromFileSlice","name","initialState","reducers","reset","state","extraReducers","builder","addCase","pending","action","fulfilled","payload","rejected","reducer","actions","selectAllUsersFromFile","selectOneUserFromFile"],"sources":["C:/Users/lis10/OneDrive/Desktop/web development/movies-subscription-management/client/src/store/usersFromFile.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getAllUsersFromFile, getOneUserFromFile } from \"../api/usersFromFile\";\r\n\r\nconst initialUsersFromFileState = {\r\n  usersFromFile: [],\r\n  userFromFile: {},\r\n  isLoading: false,\r\n  isError: false,\r\n  isSuccess: false,\r\n  message: \"\",\r\n};\r\n\r\nexport const getUsersFromFile = createAsyncThunk(\r\n  \"/usersfromfile\",\r\n  async (thunkAPI) => {\r\n    try {\r\n      return await getAllUsersFromFile();\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getUserFromFile = createAsyncThunk(\r\n  \"/usersfromfile/getOneUser\",\r\n  async (userId, thunkAPI) => {\r\n    try {\r\n      return await getOneUserFromFile(userId);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nconst usersFromFileSlice = createSlice({\r\n  name: \"usersFromFile\",\r\n  initialState: initialUsersFromFileState,\r\n  reducers: {\r\n    reset: (state) => initialUsersFromFileState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n\r\n      .addCase(getUsersFromFile.pending, (state, action) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getUsersFromFile.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.usersFromFile = action.payload;\r\n      })\r\n      .addCase(getUsersFromFile.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n      })\r\n      .addCase(getUserFromFile.pending, (state, action) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getUserFromFile.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.userFromFile = action.payload;\r\n      })\r\n      .addCase(getUserFromFile.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport default usersFromFileSlice.reducer;\r\nexport const { reset } = usersFromFileSlice.actions;\r\nexport const selectAllUsersFromFile = (state) =>\r\n  state.usersFromFile.usersFromFile;\r\nexport const selectOneUserFromFile = (state) =>\r\n  state.usersFromFile.userFromFile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}